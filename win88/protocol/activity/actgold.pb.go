// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: actgold.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//操作结果
type OpResultCode_ActGold int32

const (
	OpResultCode_ActGold_OPRC_Sucess_ActGold OpResultCode_ActGold = 0 //成功
	OpResultCode_ActGold_OPRC_Error_ActGold  OpResultCode_ActGold = 1 //失败
	//财神任务
	OpResultCode_ActGold_OPRC_Activity_GoldTask_TaskIdError OpResultCode_ActGold = 6200 //没有这个奖励
	OpResultCode_ActGold_OPRC_Activity_GoldTask_NotReach    OpResultCode_ActGold = 6201 //未达成目标, 不能领取这个奖励
	OpResultCode_ActGold_OPRC_Activity_GoldTask_TodayLimit  OpResultCode_ActGold = 6202 //今日奖励已领完
)

// Enum value maps for OpResultCode_ActGold.
var (
	OpResultCode_ActGold_name = map[int32]string{
		0:    "OPRC_Sucess_ActGold",
		1:    "OPRC_Error_ActGold",
		6200: "OPRC_Activity_GoldTask_TaskIdError",
		6201: "OPRC_Activity_GoldTask_NotReach",
		6202: "OPRC_Activity_GoldTask_TodayLimit",
	}
	OpResultCode_ActGold_value = map[string]int32{
		"OPRC_Sucess_ActGold":                0,
		"OPRC_Error_ActGold":                 1,
		"OPRC_Activity_GoldTask_TaskIdError": 6200,
		"OPRC_Activity_GoldTask_NotReach":    6201,
		"OPRC_Activity_GoldTask_TodayLimit":  6202,
	}
)

func (x OpResultCode_ActGold) Enum() *OpResultCode_ActGold {
	p := new(OpResultCode_ActGold)
	*p = x
	return p
}

func (x OpResultCode_ActGold) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpResultCode_ActGold) Descriptor() protoreflect.EnumDescriptor {
	return file_actgold_proto_enumTypes[0].Descriptor()
}

func (OpResultCode_ActGold) Type() protoreflect.EnumType {
	return &file_actgold_proto_enumTypes[0]
}

func (x OpResultCode_ActGold) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpResultCode_ActGold.Descriptor instead.
func (OpResultCode_ActGold) EnumDescriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{0}
}

//财神任务
type GoldPacketID int32

const (
	GoldPacketID_PACKET_Gold_ZERO        GoldPacketID = 0
	GoldPacketID_PACKET_CS_GOLDTASK_DATA GoldPacketID = 2630 //财神任务数据
	GoldPacketID_PACKET_SC_GOLDTASK_DATA GoldPacketID = 2631 //财神任务数据
	GoldPacketID_PACKET_CS_GOLDTASK_GET  GoldPacketID = 2632 //领取奖励
	GoldPacketID_PACKET_SC_GOLDTASK_GET  GoldPacketID = 2633 //领取奖励
	GoldPacketID_PACKET_SC_GOLDTASK_CHG  GoldPacketID = 2634 //任务进度变化
	GoldPacketID_PACKET_SC_GOLDTASK_DEL  GoldPacketID = 2635 //任务删除
	//----------------------------------------------------------------
	GoldPacketID_PACKET_CS_GOLDCOME_DATA GoldPacketID = 2636 //财神降临数据
	GoldPacketID_PACKET_SC_GOLDCOME_DATA GoldPacketID = 2637 //财神降临数据
	GoldPacketID_PACKET_CS_GOLDCOME_RANK GoldPacketID = 2638 //财神降临排行榜
	GoldPacketID_PACKET_SC_GOLDCOME_RANK GoldPacketID = 2639 //财神降临排行榜
)

// Enum value maps for GoldPacketID.
var (
	GoldPacketID_name = map[int32]string{
		0:    "PACKET_Gold_ZERO",
		2630: "PACKET_CS_GOLDTASK_DATA",
		2631: "PACKET_SC_GOLDTASK_DATA",
		2632: "PACKET_CS_GOLDTASK_GET",
		2633: "PACKET_SC_GOLDTASK_GET",
		2634: "PACKET_SC_GOLDTASK_CHG",
		2635: "PACKET_SC_GOLDTASK_DEL",
		2636: "PACKET_CS_GOLDCOME_DATA",
		2637: "PACKET_SC_GOLDCOME_DATA",
		2638: "PACKET_CS_GOLDCOME_RANK",
		2639: "PACKET_SC_GOLDCOME_RANK",
	}
	GoldPacketID_value = map[string]int32{
		"PACKET_Gold_ZERO":        0,
		"PACKET_CS_GOLDTASK_DATA": 2630,
		"PACKET_SC_GOLDTASK_DATA": 2631,
		"PACKET_CS_GOLDTASK_GET":  2632,
		"PACKET_SC_GOLDTASK_GET":  2633,
		"PACKET_SC_GOLDTASK_CHG":  2634,
		"PACKET_SC_GOLDTASK_DEL":  2635,
		"PACKET_CS_GOLDCOME_DATA": 2636,
		"PACKET_SC_GOLDCOME_DATA": 2637,
		"PACKET_CS_GOLDCOME_RANK": 2638,
		"PACKET_SC_GOLDCOME_RANK": 2639,
	}
)

func (x GoldPacketID) Enum() *GoldPacketID {
	p := new(GoldPacketID)
	*p = x
	return p
}

func (x GoldPacketID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoldPacketID) Descriptor() protoreflect.EnumDescriptor {
	return file_actgold_proto_enumTypes[1].Descriptor()
}

func (GoldPacketID) Type() protoreflect.EnumType {
	return &file_actgold_proto_enumTypes[1]
}

func (x GoldPacketID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoldPacketID.Descriptor instead.
func (GoldPacketID) EnumDescriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{1}
}

//PACKET_CS_GOLDTASK_DATA
type CSGoldTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSGoldTaskData) Reset() {
	*x = CSGoldTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGoldTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGoldTaskData) ProtoMessage() {}

func (x *CSGoldTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGoldTaskData.ProtoReflect.Descriptor instead.
func (*CSGoldTaskData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{0}
}

//奖励信息
type GoldTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId         int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	Data           int64 `protobuf:"varint,2,opt,name=Data,proto3" json:"Data,omitempty"`
	CompletedTimes int32 `protobuf:"varint,3,opt,name=CompletedTimes,proto3" json:"CompletedTimes,omitempty"` //已完成次数
	Status         int32 `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`                 //任务状态0: 进行中 1:今日已领完
}

func (x *GoldTaskData) Reset() {
	*x = GoldTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldTaskData) ProtoMessage() {}

func (x *GoldTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldTaskData.ProtoReflect.Descriptor instead.
func (*GoldTaskData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{1}
}

func (x *GoldTaskData) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GoldTaskData) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

func (x *GoldTaskData) GetCompletedTimes() int32 {
	if x != nil {
		return x.CompletedTimes
	}
	return 0
}

func (x *GoldTaskData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

//PACKET_SC_GOLDTASK_DATA
type SCGoldTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datas  []*GoldTaskData `protobuf:"bytes,1,rep,name=Datas,proto3" json:"Datas,omitempty"`
	Config string          `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"` //配置数据,原webapi返回的json串
}

func (x *SCGoldTaskData) Reset() {
	*x = SCGoldTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldTaskData) ProtoMessage() {}

func (x *SCGoldTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldTaskData.ProtoReflect.Descriptor instead.
func (*SCGoldTaskData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{2}
}

func (x *SCGoldTaskData) GetDatas() []*GoldTaskData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *SCGoldTaskData) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

//PACKET_CS_GOLDTASK_GET
type CSGoldTaskGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //任务ID
}

func (x *CSGoldTaskGet) Reset() {
	*x = CSGoldTaskGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGoldTaskGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGoldTaskGet) ProtoMessage() {}

func (x *CSGoldTaskGet) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGoldTaskGet.ProtoReflect.Descriptor instead.
func (*CSGoldTaskGet) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{3}
}

func (x *CSGoldTaskGet) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

//PACKET_SC_GOLDTASK_GET
type SCGoldTaskGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    int32                `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //任务ID
	Data      *GoldTaskData        `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Score     int64                `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	OpRetCode OpResultCode_ActGold `protobuf:"varint,4,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActGold" json:"OpRetCode,omitempty"` //返回错误码
}

func (x *SCGoldTaskGet) Reset() {
	*x = SCGoldTaskGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldTaskGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldTaskGet) ProtoMessage() {}

func (x *SCGoldTaskGet) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldTaskGet.ProtoReflect.Descriptor instead.
func (*SCGoldTaskGet) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{4}
}

func (x *SCGoldTaskGet) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SCGoldTaskGet) GetData() *GoldTaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SCGoldTaskGet) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SCGoldTaskGet) GetOpRetCode() OpResultCode_ActGold {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActGold_OPRC_Sucess_ActGold
}

//任务进度改变
//PACKET_SC_GOLDTASK_CHG
type SCGoldTaskChg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*GoldTaskData `protobuf:"bytes,1,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
}

func (x *SCGoldTaskChg) Reset() {
	*x = SCGoldTaskChg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldTaskChg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldTaskChg) ProtoMessage() {}

func (x *SCGoldTaskChg) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldTaskChg.ProtoReflect.Descriptor instead.
func (*SCGoldTaskChg) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{5}
}

func (x *SCGoldTaskChg) GetTasks() []*GoldTaskData {
	if x != nil {
		return x.Tasks
	}
	return nil
}

//删除任务
//PACKET_SC_GOLDTASK_DEL
type SCGoldTaskDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIds []int32 `protobuf:"varint,1,rep,packed,name=TaskIds,proto3" json:"TaskIds,omitempty"`
}

func (x *SCGoldTaskDel) Reset() {
	*x = SCGoldTaskDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldTaskDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldTaskDel) ProtoMessage() {}

func (x *SCGoldTaskDel) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldTaskDel.ProtoReflect.Descriptor instead.
func (*SCGoldTaskDel) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{6}
}

func (x *SCGoldTaskDel) GetTaskIds() []int32 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

//财神降临
//----------------------------------------------------------------
//PACKET_CS_GOLDCOME_DATA
type CSGoldComeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedCfg bool `protobuf:"varint,1,opt,name=NeedCfg,proto3" json:"NeedCfg,omitempty"`
}

func (x *CSGoldComeData) Reset() {
	*x = CSGoldComeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGoldComeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGoldComeData) ProtoMessage() {}

func (x *CSGoldComeData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGoldComeData.ProtoReflect.Descriptor instead.
func (*CSGoldComeData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{7}
}

func (x *CSGoldComeData) GetNeedCfg() bool {
	if x != nil {
		return x.NeedCfg
	}
	return false
}

//奖励信息
type GoldComeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	Score     int64 `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	GameTimes int64 `protobuf:"varint,3,opt,name=GameTimes,proto3" json:"GameTimes,omitempty"`
}

func (x *GoldComeData) Reset() {
	*x = GoldComeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldComeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldComeData) ProtoMessage() {}

func (x *GoldComeData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldComeData.ProtoReflect.Descriptor instead.
func (*GoldComeData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{8}
}

func (x *GoldComeData) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GoldComeData) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GoldComeData) GetGameTimes() int64 {
	if x != nil {
		return x.GameTimes
	}
	return 0
}

//PACKET_SC_GOLDCOME_DATA
type SCGoldComeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datas  []*GoldComeData `protobuf:"bytes,1,rep,name=Datas,proto3" json:"Datas,omitempty"`
	Config string          `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"` //配置数据,原webapi返回的json串
}

func (x *SCGoldComeData) Reset() {
	*x = SCGoldComeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldComeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldComeData) ProtoMessage() {}

func (x *SCGoldComeData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldComeData.ProtoReflect.Descriptor instead.
func (*SCGoldComeData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{9}
}

func (x *SCGoldComeData) GetDatas() []*GoldComeData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *SCGoldComeData) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

//PACKET_CS_GOLDCOME_RANK
type CSGoldComeRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
}

func (x *CSGoldComeRank) Reset() {
	*x = CSGoldComeRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGoldComeRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGoldComeRank) ProtoMessage() {}

func (x *CSGoldComeRank) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGoldComeRank.ProtoReflect.Descriptor instead.
func (*CSGoldComeRank) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{10}
}

func (x *CSGoldComeRank) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

//奖励信息
type GoldComePlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank      int32  `protobuf:"varint,1,opt,name=Rank,proto3" json:"Rank,omitempty"` //排名
	SnId      int32  `protobuf:"varint,2,opt,name=SnId,proto3" json:"SnId,omitempty"`
	HeadIcon  int32  `protobuf:"varint,3,opt,name=HeadIcon,proto3" json:"HeadIcon,omitempty"`
	NickName  string `protobuf:"bytes,4,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Score     int64  `protobuf:"varint,5,opt,name=Score,proto3" json:"Score,omitempty"`         //比赛得分
	GameTimes int64  `protobuf:"varint,6,opt,name=GameTimes,proto3" json:"GameTimes,omitempty"` //参赛局数
	Reward    int64  `protobuf:"varint,7,opt,name=Reward,proto3" json:"Reward,omitempty"`
}

func (x *GoldComePlayerData) Reset() {
	*x = GoldComePlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldComePlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldComePlayerData) ProtoMessage() {}

func (x *GoldComePlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldComePlayerData.ProtoReflect.Descriptor instead.
func (*GoldComePlayerData) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{11}
}

func (x *GoldComePlayerData) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GoldComePlayerData) GetSnId() int32 {
	if x != nil {
		return x.SnId
	}
	return 0
}

func (x *GoldComePlayerData) GetHeadIcon() int32 {
	if x != nil {
		return x.HeadIcon
	}
	return 0
}

func (x *GoldComePlayerData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GoldComePlayerData) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GoldComePlayerData) GetGameTimes() int64 {
	if x != nil {
		return x.GameTimes
	}
	return 0
}

func (x *GoldComePlayerData) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

type GoldComeDailyTaskRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankData []*GoldComePlayerData `protobuf:"bytes,1,rep,name=RankData,proto3" json:"RankData,omitempty"`       //排名
	ActTime  []int32               `protobuf:"varint,2,rep,packed,name=ActTime,proto3" json:"ActTime,omitempty"` //[YYYY,MM,DD,HH,mm,HH,mm]
	ActState int32                 `protobuf:"varint,3,opt,name=ActState,proto3" json:"ActState,omitempty"`      //0 未开始；1，进行中；2，已发奖
}

func (x *GoldComeDailyTaskRank) Reset() {
	*x = GoldComeDailyTaskRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldComeDailyTaskRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldComeDailyTaskRank) ProtoMessage() {}

func (x *GoldComeDailyTaskRank) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldComeDailyTaskRank.ProtoReflect.Descriptor instead.
func (*GoldComeDailyTaskRank) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{12}
}

func (x *GoldComeDailyTaskRank) GetRankData() []*GoldComePlayerData {
	if x != nil {
		return x.RankData
	}
	return nil
}

func (x *GoldComeDailyTaskRank) GetActTime() []int32 {
	if x != nil {
		return x.ActTime
	}
	return nil
}

func (x *GoldComeDailyTaskRank) GetActState() int32 {
	if x != nil {
		return x.ActState
	}
	return 0
}

//PACKET_SC_GOLDCOME_RANK
type SCGoldComeRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      int32                    `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	RankList    []*GoldComeDailyTaskRank `protobuf:"bytes,2,rep,name=RankList,proto3" json:"RankList,omitempty"`
	NextActTime []int32                  `protobuf:"varint,3,rep,packed,name=NextActTime,proto3" json:"NextActTime,omitempty"` //[YYYY,MM,DD,HH,mm,HH,mm]
}

func (x *SCGoldComeRank) Reset() {
	*x = SCGoldComeRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actgold_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGoldComeRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGoldComeRank) ProtoMessage() {}

func (x *SCGoldComeRank) ProtoReflect() protoreflect.Message {
	mi := &file_actgold_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGoldComeRank.ProtoReflect.Descriptor instead.
func (*SCGoldComeRank) Descriptor() ([]byte, []int) {
	return file_actgold_proto_rawDescGZIP(), []int{13}
}

func (x *SCGoldComeRank) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *SCGoldComeRank) GetRankList() []*GoldComeDailyTaskRank {
	if x != nil {
		return x.RankList
	}
	return nil
}

func (x *SCGoldComeRank) GetNextActTime() []int32 {
	if x != nil {
		return x.NextActTime
	}
	return nil
}

var File_actgold_proto protoreflect.FileDescriptor

var file_actgold_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x67, 0x6f, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x53, 0x47,
	0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x0c, 0x47,
	0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x53, 0x43, 0x47, 0x6f, 0x6c,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x05, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x27, 0x0a, 0x0d, 0x43, 0x53, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x53, 0x43, 0x47,
	0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x6f, 0x6c, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f,
	0x41, 0x63, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x53, 0x43, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x68, 0x67, 0x12, 0x2c, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x6f,
	0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x43, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x0e,
	0x43, 0x53, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x66, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x4e, 0x65, 0x65, 0x64, 0x43, 0x66, 0x67, 0x22, 0x5a, 0x0a, 0x0c, 0x47, 0x6f, 0x6c, 0x64,
	0x43, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x53, 0x43, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x05, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x28, 0x0a, 0x0e,
	0x43, 0x53, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x47, 0x6f, 0x6c, 0x64, 0x43,
	0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x53, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x47, 0x6f,
	0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x38, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x41, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x53, 0x43, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x6f,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x6f, 0x6c, 0x64,
	0x43, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4e,
	0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0xbe, 0x01,
	0x0a, 0x14, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x63, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x53,
	0x75, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x41, 0x63,
	0x74, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x4f, 0x50, 0x52, 0x43, 0x5f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xb8, 0x30,
	0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x4e, 0x6f, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x68, 0x10, 0xb9, 0x30, 0x12, 0x26, 0x0a, 0x21, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x5f, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0xba, 0x30, 0x2a, 0xcc,
	0x02, 0x0a, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x5f, 0x5a,
	0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x43, 0x53, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0xc6, 0x14, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43,
	0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xc7,
	0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x47,
	0x4f, 0x4c, 0x44, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x10, 0xc8, 0x14, 0x12, 0x1b,
	0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x47, 0x4f, 0x4c, 0x44,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x10, 0xc9, 0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x43, 0x48, 0x47, 0x10, 0xca, 0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44,
	0x45, 0x4c, 0x10, 0xcb, 0x14, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x43, 0x53, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0xcc, 0x14, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43,
	0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0xcd,
	0x14, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x47,
	0x4f, 0x4c, 0x44, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x10, 0xce, 0x14, 0x12,
	0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x47, 0x4f, 0x4c,
	0x44, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x10, 0xcf, 0x14, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_actgold_proto_rawDescOnce sync.Once
	file_actgold_proto_rawDescData = file_actgold_proto_rawDesc
)

func file_actgold_proto_rawDescGZIP() []byte {
	file_actgold_proto_rawDescOnce.Do(func() {
		file_actgold_proto_rawDescData = protoimpl.X.CompressGZIP(file_actgold_proto_rawDescData)
	})
	return file_actgold_proto_rawDescData
}

var file_actgold_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_actgold_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_actgold_proto_goTypes = []interface{}{
	(OpResultCode_ActGold)(0),     // 0: activity.OpResultCode_ActGold
	(GoldPacketID)(0),             // 1: activity.GoldPacketID
	(*CSGoldTaskData)(nil),        // 2: activity.CSGoldTaskData
	(*GoldTaskData)(nil),          // 3: activity.GoldTaskData
	(*SCGoldTaskData)(nil),        // 4: activity.SCGoldTaskData
	(*CSGoldTaskGet)(nil),         // 5: activity.CSGoldTaskGet
	(*SCGoldTaskGet)(nil),         // 6: activity.SCGoldTaskGet
	(*SCGoldTaskChg)(nil),         // 7: activity.SCGoldTaskChg
	(*SCGoldTaskDel)(nil),         // 8: activity.SCGoldTaskDel
	(*CSGoldComeData)(nil),        // 9: activity.CSGoldComeData
	(*GoldComeData)(nil),          // 10: activity.GoldComeData
	(*SCGoldComeData)(nil),        // 11: activity.SCGoldComeData
	(*CSGoldComeRank)(nil),        // 12: activity.CSGoldComeRank
	(*GoldComePlayerData)(nil),    // 13: activity.GoldComePlayerData
	(*GoldComeDailyTaskRank)(nil), // 14: activity.GoldComeDailyTaskRank
	(*SCGoldComeRank)(nil),        // 15: activity.SCGoldComeRank
}
var file_actgold_proto_depIdxs = []int32{
	3,  // 0: activity.SCGoldTaskData.Datas:type_name -> activity.GoldTaskData
	3,  // 1: activity.SCGoldTaskGet.Data:type_name -> activity.GoldTaskData
	0,  // 2: activity.SCGoldTaskGet.OpRetCode:type_name -> activity.OpResultCode_ActGold
	3,  // 3: activity.SCGoldTaskChg.Tasks:type_name -> activity.GoldTaskData
	10, // 4: activity.SCGoldComeData.Datas:type_name -> activity.GoldComeData
	13, // 5: activity.GoldComeDailyTaskRank.RankData:type_name -> activity.GoldComePlayerData
	14, // 6: activity.SCGoldComeRank.RankList:type_name -> activity.GoldComeDailyTaskRank
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_actgold_proto_init() }
func file_actgold_proto_init() {
	if File_actgold_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_actgold_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGoldTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGoldTaskGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldTaskGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldTaskChg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldTaskDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGoldComeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldComeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldComeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGoldComeRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldComePlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldComeDailyTaskRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actgold_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGoldComeRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actgold_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actgold_proto_goTypes,
		DependencyIndexes: file_actgold_proto_depIdxs,
		EnumInfos:         file_actgold_proto_enumTypes,
		MessageInfos:      file_actgold_proto_msgTypes,
	}.Build()
	File_actgold_proto = out.File
	file_actgold_proto_rawDesc = nil
	file_actgold_proto_goTypes = nil
	file_actgold_proto_depIdxs = nil
}
