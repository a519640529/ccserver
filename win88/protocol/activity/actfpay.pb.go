// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: actfpay.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//操作结果
type OpResultCode_ActFPay int32

const (
	OpResultCode_ActFPay_OPRC_Sucess_ActFPay             OpResultCode_ActFPay = 0    //成功
	OpResultCode_ActFPay_OPRC_Error_ActFPay              OpResultCode_ActFPay = 1    //失败
	OpResultCode_ActFPay_OPRC_Activity_FPAY_NoStart      OpResultCode_ActFPay = 6301 //活动关闭中
	OpResultCode_ActFPay_OPRC_Activity_FPAY_IsBusy       OpResultCode_ActFPay = 6302 //繁忙，稍后重试
	OpResultCode_ActFPay_OPRC_Activity_FPAY_PAY_NoEnough OpResultCode_ActFPay = 6303 //充值额度暂时不足
	OpResultCode_ActFPay_OPRC_Activity_FPAY_Has_Sign     OpResultCode_ActFPay = 6304 //已经报名
	OpResultCode_ActFPay_OPRC_Activity_FPAY_Has_Get      OpResultCode_ActFPay = 6305 //已经领取
	OpResultCode_ActFPay_OPRC_Activity_FPAY_Cant_Get     OpResultCode_ActFPay = 6306 //暂时无法领取
	OpResultCode_ActFPay_OPRC_Activity_FPAY_Lock         OpResultCode_ActFPay = 6307 //用户被锁定，请联系客服
)

// Enum value maps for OpResultCode_ActFPay.
var (
	OpResultCode_ActFPay_name = map[int32]string{
		0:    "OPRC_Sucess_ActFPay",
		1:    "OPRC_Error_ActFPay",
		6301: "OPRC_Activity_FPAY_NoStart",
		6302: "OPRC_Activity_FPAY_IsBusy",
		6303: "OPRC_Activity_FPAY_PAY_NoEnough",
		6304: "OPRC_Activity_FPAY_Has_Sign",
		6305: "OPRC_Activity_FPAY_Has_Get",
		6306: "OPRC_Activity_FPAY_Cant_Get",
		6307: "OPRC_Activity_FPAY_Lock",
	}
	OpResultCode_ActFPay_value = map[string]int32{
		"OPRC_Sucess_ActFPay":             0,
		"OPRC_Error_ActFPay":              1,
		"OPRC_Activity_FPAY_NoStart":      6301,
		"OPRC_Activity_FPAY_IsBusy":       6302,
		"OPRC_Activity_FPAY_PAY_NoEnough": 6303,
		"OPRC_Activity_FPAY_Has_Sign":     6304,
		"OPRC_Activity_FPAY_Has_Get":      6305,
		"OPRC_Activity_FPAY_Cant_Get":     6306,
		"OPRC_Activity_FPAY_Lock":         6307,
	}
)

func (x OpResultCode_ActFPay) Enum() *OpResultCode_ActFPay {
	p := new(OpResultCode_ActFPay)
	*p = x
	return p
}

func (x OpResultCode_ActFPay) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpResultCode_ActFPay) Descriptor() protoreflect.EnumDescriptor {
	return file_actfpay_proto_enumTypes[0].Descriptor()
}

func (OpResultCode_ActFPay) Type() protoreflect.EnumType {
	return &file_actfpay_proto_enumTypes[0]
}

func (x OpResultCode_ActFPay) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpResultCode_ActFPay.Descriptor instead.
func (OpResultCode_ActFPay) EnumDescriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{0}
}

// fpay活动
type FPayPacketID int32

const (
	FPayPacketID_PACKET_FPay_ZERO                  FPayPacketID = 0
	FPayPacketID_PACKET_CS_FPay_Info               FPayPacketID = 2620 // 首充信息
	FPayPacketID_PACKET_SC_FPay_Info               FPayPacketID = 2621 // 首充信息返回
	FPayPacketID_PACKET_CS_FPay_Get                FPayPacketID = 2622 // 领取
	FPayPacketID_PACKET_SC_FPay_Get                FPayPacketID = 2623 // 领取返回
	FPayPacketID_PACKET_SC_Notify_ActFPay_State    FPayPacketID = 2624 // 通知活动状态
	FPayPacketID_PACKET_SC_Notify_ActFPayGet_State FPayPacketID = 2625 // 通知奖励领取状态变化
	FPayPacketID_PACKET_CS_FPay_Sign               FPayPacketID = 2626 // 报名
	FPayPacketID_PACKET_SC_FPay_Sign               FPayPacketID = 2627 // 报名返回
)

// Enum value maps for FPayPacketID.
var (
	FPayPacketID_name = map[int32]string{
		0:    "PACKET_FPay_ZERO",
		2620: "PACKET_CS_FPay_Info",
		2621: "PACKET_SC_FPay_Info",
		2622: "PACKET_CS_FPay_Get",
		2623: "PACKET_SC_FPay_Get",
		2624: "PACKET_SC_Notify_ActFPay_State",
		2625: "PACKET_SC_Notify_ActFPayGet_State",
		2626: "PACKET_CS_FPay_Sign",
		2627: "PACKET_SC_FPay_Sign",
	}
	FPayPacketID_value = map[string]int32{
		"PACKET_FPay_ZERO":                  0,
		"PACKET_CS_FPay_Info":               2620,
		"PACKET_SC_FPay_Info":               2621,
		"PACKET_CS_FPay_Get":                2622,
		"PACKET_SC_FPay_Get":                2623,
		"PACKET_SC_Notify_ActFPay_State":    2624,
		"PACKET_SC_Notify_ActFPayGet_State": 2625,
		"PACKET_CS_FPay_Sign":               2626,
		"PACKET_SC_FPay_Sign":               2627,
	}
)

func (x FPayPacketID) Enum() *FPayPacketID {
	p := new(FPayPacketID)
	*p = x
	return p
}

func (x FPayPacketID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FPayPacketID) Descriptor() protoreflect.EnumDescriptor {
	return file_actfpay_proto_enumTypes[1].Descriptor()
}

func (FPayPacketID) Type() protoreflect.EnumType {
	return &file_actfpay_proto_enumTypes[1]
}

func (x FPayPacketID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FPayPacketID.Descriptor instead.
func (FPayPacketID) EnumDescriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{1}
}

//赢取比例
type ActFPayWinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinType int32 `protobuf:"varint,1,opt,name=WinType,proto3" json:"WinType,omitempty"` //类型
	WinRate int32 `protobuf:"varint,2,opt,name=WinRate,proto3" json:"WinRate,omitempty"` //赢取比例
}

func (x *ActFPayWinConfig) Reset() {
	*x = ActFPayWinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActFPayWinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActFPayWinConfig) ProtoMessage() {}

func (x *ActFPayWinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActFPayWinConfig.ProtoReflect.Descriptor instead.
func (*ActFPayWinConfig) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{0}
}

func (x *ActFPayWinConfig) GetWinType() int32 {
	if x != nil {
		return x.WinType
	}
	return 0
}

func (x *ActFPayWinConfig) GetWinRate() int32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

//显示信息
type FPayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FPayCoin     int32               `protobuf:"varint,1,opt,name=FPayCoin,proto3" json:"FPayCoin,omitempty"`         //需要充值数量
	PlayerNum    int32               `protobuf:"varint,2,opt,name=PlayerNum,proto3" json:"PlayerNum,omitempty"`       //玩家数量
	FPayGiveCoin int32               `protobuf:"varint,3,opt,name=FPayGiveCoin,proto3" json:"FPayGiveCoin,omitempty"` //赠送金额
	FPayGiveType int32               `protobuf:"varint,4,opt,name=FPayGiveType,proto3" json:"FPayGiveType,omitempty"` //赢取金币需求类型 0 固定 1比例
	NeedWinCoin  int32               `protobuf:"varint,5,opt,name=NeedWinCoin,proto3" json:"NeedWinCoin,omitempty"`   //需要赢取数量
	StartTime    int32               `protobuf:"varint,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`       //开始时间
	EndTime      int32               `protobuf:"varint,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`           //结束时间
	WinConfig    []*ActFPayWinConfig `protobuf:"bytes,8,rep,name=WinConfig,proto3" json:"WinConfig,omitempty"`        //赢取比例
}

func (x *FPayInfo) Reset() {
	*x = FPayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FPayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FPayInfo) ProtoMessage() {}

func (x *FPayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FPayInfo.ProtoReflect.Descriptor instead.
func (*FPayInfo) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{1}
}

func (x *FPayInfo) GetFPayCoin() int32 {
	if x != nil {
		return x.FPayCoin
	}
	return 0
}

func (x *FPayInfo) GetPlayerNum() int32 {
	if x != nil {
		return x.PlayerNum
	}
	return 0
}

func (x *FPayInfo) GetFPayGiveCoin() int32 {
	if x != nil {
		return x.FPayGiveCoin
	}
	return 0
}

func (x *FPayInfo) GetFPayGiveType() int32 {
	if x != nil {
		return x.FPayGiveType
	}
	return 0
}

func (x *FPayInfo) GetNeedWinCoin() int32 {
	if x != nil {
		return x.NeedWinCoin
	}
	return 0
}

func (x *FPayInfo) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FPayInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FPayInfo) GetWinConfig() []*ActFPayWinConfig {
	if x != nil {
		return x.WinConfig
	}
	return nil
}

//领取信息
type FPayGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinCoin int32 `protobuf:"varint,1,opt,name=WinCoin,proto3" json:"WinCoin,omitempty"` //目前赢取金币
	State   int32 `protobuf:"varint,2,opt,name=State,proto3" json:"State,omitempty"`     //状态 0 无法报名 1 可以报名  2 无法领取  3 可以领取 4 已经领取
}

func (x *FPayGetInfo) Reset() {
	*x = FPayGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FPayGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FPayGetInfo) ProtoMessage() {}

func (x *FPayGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FPayGetInfo.ProtoReflect.Descriptor instead.
func (*FPayGetInfo) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{2}
}

func (x *FPayGetInfo) GetWinCoin() int32 {
	if x != nil {
		return x.WinCoin
	}
	return 0
}

func (x *FPayGetInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 首充奖励信息返回
type SCFPayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FPayInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"` // 首充信息
}

func (x *SCFPayInfo) Reset() {
	*x = SCFPayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCFPayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCFPayInfo) ProtoMessage() {}

func (x *SCFPayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCFPayInfo.ProtoReflect.Descriptor instead.
func (*SCFPayInfo) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{3}
}

func (x *SCFPayInfo) GetInfo() *FPayInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 获得首充奖励信息
type CSFPayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSFPayInfo) Reset() {
	*x = CSFPayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSFPayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSFPayInfo) ProtoMessage() {}

func (x *CSFPayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSFPayInfo.ProtoReflect.Descriptor instead.
func (*CSFPayInfo) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{4}
}

// 领取奖励返回
type SCGetFPay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpRetCode OpResultCode_ActFPay `protobuf:"varint,1,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActFPay" json:"OpRetCode,omitempty"` // 错误码
}

func (x *SCGetFPay) Reset() {
	*x = SCGetFPay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGetFPay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGetFPay) ProtoMessage() {}

func (x *SCGetFPay) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGetFPay.ProtoReflect.Descriptor instead.
func (*SCGetFPay) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{5}
}

func (x *SCGetFPay) GetOpRetCode() OpResultCode_ActFPay {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActFPay_OPRC_Sucess_ActFPay
}

// 领取奖励
type CSGetFPay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSGetFPay) Reset() {
	*x = CSGetFPay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGetFPay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGetFPay) ProtoMessage() {}

func (x *CSGetFPay) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGetFPay.ProtoReflect.Descriptor instead.
func (*CSGetFPay) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{6}
}

// 通知活动状态变化
type SCNotifyFPayState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"` // 状态 0 关闭 1开启
}

func (x *SCNotifyFPayState) Reset() {
	*x = SCNotifyFPayState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCNotifyFPayState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCNotifyFPayState) ProtoMessage() {}

func (x *SCNotifyFPayState) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCNotifyFPayState.ProtoReflect.Descriptor instead.
func (*SCNotifyFPayState) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{7}
}

func (x *SCNotifyFPayState) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 通知领取变化
type SCNotifyFPayGetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetInfo *FPayGetInfo `protobuf:"bytes,1,opt,name=GetInfo,proto3" json:"GetInfo,omitempty"` // 领取信息
}

func (x *SCNotifyFPayGetState) Reset() {
	*x = SCNotifyFPayGetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCNotifyFPayGetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCNotifyFPayGetState) ProtoMessage() {}

func (x *SCNotifyFPayGetState) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCNotifyFPayGetState.ProtoReflect.Descriptor instead.
func (*SCNotifyFPayGetState) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{8}
}

func (x *SCNotifyFPayGetState) GetGetInfo() *FPayGetInfo {
	if x != nil {
		return x.GetInfo
	}
	return nil
}

// 报名返回
type SCFPaySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpRetCode OpResultCode_ActFPay `protobuf:"varint,1,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActFPay" json:"OpRetCode,omitempty"` // 错误码
}

func (x *SCFPaySign) Reset() {
	*x = SCFPaySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCFPaySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCFPaySign) ProtoMessage() {}

func (x *SCFPaySign) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCFPaySign.ProtoReflect.Descriptor instead.
func (*SCFPaySign) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{9}
}

func (x *SCFPaySign) GetOpRetCode() OpResultCode_ActFPay {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActFPay_OPRC_Sucess_ActFPay
}

//报名
type CSFPaySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSFPaySign) Reset() {
	*x = CSFPaySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actfpay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSFPaySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSFPaySign) ProtoMessage() {}

func (x *CSFPaySign) ProtoReflect() protoreflect.Message {
	mi := &file_actfpay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSFPaySign.ProtoReflect.Descriptor instead.
func (*CSFPaySign) Descriptor() ([]byte, []int) {
	return file_actfpay_proto_rawDescGZIP(), []int{10}
}

var File_actfpay_proto protoreflect.FileDescriptor

var file_actfpay_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x66, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x10, 0x41, 0x63, 0x74,
	0x46, 0x50, 0x61, 0x79, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x57, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x57, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x22, 0xa0, 0x02, 0x0a, 0x08, 0x46, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x46, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x50, 0x61, 0x79,
	0x47, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x46, 0x50, 0x61, 0x79, 0x47, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x50, 0x61, 0x79, 0x47, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x46, 0x50, 0x61, 0x79, 0x47, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x65, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x57, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x46, 0x50, 0x61, 0x79,
	0x57, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x57, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x3d, 0x0a, 0x0b, 0x46, 0x50, 0x61, 0x79, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x43, 0x46, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x50, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x53, 0x46,
	0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x09, 0x53, 0x43, 0x47, 0x65, 0x74,
	0x46, 0x50, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f,
	0x41, 0x63, 0x74, 0x46, 0x50, 0x61, 0x79, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x53, 0x47, 0x65, 0x74, 0x46, 0x50, 0x61, 0x79, 0x22,
	0x29, 0x0a, 0x11, 0x53, 0x43, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x50, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x53, 0x43,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x50, 0x61, 0x79, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x46,
	0x50, 0x61, 0x79, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x0a, 0x53, 0x43, 0x46, 0x50, 0x61, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x63, 0x74,
	0x46, 0x50, 0x61, 0x79, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x0c, 0x0a, 0x0a, 0x43, 0x53, 0x46, 0x50, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x2a, 0xb1, 0x02,
	0x0a, 0x14, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x63, 0x74, 0x46, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x53,
	0x75, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x46, 0x50, 0x61, 0x79, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x41, 0x63,
	0x74, 0x46, 0x50, 0x61, 0x79, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x50, 0x52, 0x43, 0x5f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x4e, 0x6f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x9d, 0x31, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x52, 0x43,
	0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x49,
	0x73, 0x42, 0x75, 0x73, 0x79, 0x10, 0x9e, 0x31, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x52, 0x43,
	0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x50,
	0x41, 0x59, 0x5f, 0x4e, 0x6f, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x10, 0x9f, 0x31, 0x12, 0x20,
	0x0a, 0x1b, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x46, 0x50, 0x41, 0x59, 0x5f, 0x48, 0x61, 0x73, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x10, 0xa0, 0x31,
	0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x48, 0x61, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x10, 0xa1,
	0x31, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x43, 0x61, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74,
	0x10, 0xa2, 0x31, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x46, 0x50, 0x41, 0x59, 0x5f, 0x4c, 0x6f, 0x63, 0x6b, 0x10, 0xa3,
	0x31, 0x2a, 0x8b, 0x02, 0x0a, 0x0c, 0x46, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x50, 0x61,
	0x79, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10,
	0xbc, 0x14, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f,
	0x46, 0x50, 0x61, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xbd, 0x14, 0x12, 0x17, 0x0a, 0x12,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x47,
	0x65, 0x74, 0x10, 0xbe, 0x14, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x53, 0x43, 0x5f, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x10, 0xbf, 0x14, 0x12, 0x23,
	0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x5f, 0x41, 0x63, 0x74, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x10, 0xc0, 0x14, 0x12, 0x26, 0x0a, 0x21, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43,
	0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x41, 0x63, 0x74, 0x46, 0x50, 0x61, 0x79, 0x47,
	0x65, 0x74, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xc1, 0x14, 0x12, 0x18, 0x0a, 0x13, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x53, 0x69,
	0x67, 0x6e, 0x10, 0xc2, 0x14, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x53, 0x43, 0x5f, 0x46, 0x50, 0x61, 0x79, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x10, 0xc3, 0x14, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actfpay_proto_rawDescOnce sync.Once
	file_actfpay_proto_rawDescData = file_actfpay_proto_rawDesc
)

func file_actfpay_proto_rawDescGZIP() []byte {
	file_actfpay_proto_rawDescOnce.Do(func() {
		file_actfpay_proto_rawDescData = protoimpl.X.CompressGZIP(file_actfpay_proto_rawDescData)
	})
	return file_actfpay_proto_rawDescData
}

var file_actfpay_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_actfpay_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_actfpay_proto_goTypes = []interface{}{
	(OpResultCode_ActFPay)(0),    // 0: activity.OpResultCode_ActFPay
	(FPayPacketID)(0),            // 1: activity.FPayPacketID
	(*ActFPayWinConfig)(nil),     // 2: activity.ActFPayWinConfig
	(*FPayInfo)(nil),             // 3: activity.FPayInfo
	(*FPayGetInfo)(nil),          // 4: activity.FPayGetInfo
	(*SCFPayInfo)(nil),           // 5: activity.SCFPayInfo
	(*CSFPayInfo)(nil),           // 6: activity.CSFPayInfo
	(*SCGetFPay)(nil),            // 7: activity.SCGetFPay
	(*CSGetFPay)(nil),            // 8: activity.CSGetFPay
	(*SCNotifyFPayState)(nil),    // 9: activity.SCNotifyFPayState
	(*SCNotifyFPayGetState)(nil), // 10: activity.SCNotifyFPayGetState
	(*SCFPaySign)(nil),           // 11: activity.SCFPaySign
	(*CSFPaySign)(nil),           // 12: activity.CSFPaySign
}
var file_actfpay_proto_depIdxs = []int32{
	2, // 0: activity.FPayInfo.WinConfig:type_name -> activity.ActFPayWinConfig
	3, // 1: activity.SCFPayInfo.Info:type_name -> activity.FPayInfo
	0, // 2: activity.SCGetFPay.OpRetCode:type_name -> activity.OpResultCode_ActFPay
	4, // 3: activity.SCNotifyFPayGetState.GetInfo:type_name -> activity.FPayGetInfo
	0, // 4: activity.SCFPaySign.OpRetCode:type_name -> activity.OpResultCode_ActFPay
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_actfpay_proto_init() }
func file_actfpay_proto_init() {
	if File_actfpay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_actfpay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActFPayWinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FPayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FPayGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCFPayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSFPayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGetFPay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGetFPay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCNotifyFPayState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCNotifyFPayGetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCFPaySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actfpay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSFPaySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actfpay_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actfpay_proto_goTypes,
		DependencyIndexes: file_actfpay_proto_depIdxs,
		EnumInfos:         file_actfpay_proto_enumTypes,
		MessageInfos:      file_actfpay_proto_msgTypes,
	}.Build()
	File_actfpay_proto = out.File
	file_actfpay_proto_rawDesc = nil
	file_actfpay_proto_goTypes = nil
	file_actfpay_proto_depIdxs = nil
}
