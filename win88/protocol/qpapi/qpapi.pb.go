// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: qpapi.proto

package qpapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

// 错误码定义
type TagCode int32

const (
	// option allow_alias = true;
	TagCode_UNKNOWN          TagCode = 0 // 占位，不使用
	TagCode_SUCCESS          TagCode = 1 //成功
	TagCode_FAILED           TagCode = 2 //失败
	TagCode_SIGN_ERROR       TagCode = 3 //验签失败
	TagCode_PROTO_DATA_ERROR TagCode = 4 // pb数据错误
)

// Enum value maps for TagCode.
var (
	TagCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "FAILED",
		3: "SIGN_ERROR",
		4: "PROTO_DATA_ERROR",
	}
	TagCode_value = map[string]int32{
		"UNKNOWN":          0,
		"SUCCESS":          1,
		"FAILED":           2,
		"SIGN_ERROR":       3,
		"PROTO_DATA_ERROR": 4,
	}
)

func (x TagCode) Enum() *TagCode {
	p := new(TagCode)
	*p = x
	return p
}

func (x TagCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagCode) Descriptor() protoreflect.EnumDescriptor {
	return file_qpapi_proto_enumTypes[0].Descriptor()
}

func (TagCode) Type() protoreflect.EnumType {
	return &file_qpapi_proto_enumTypes[0]
}

func (x TagCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagCode.Descriptor instead.
func (TagCode) EnumDescriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{0}
}

//[action] /api/Member/QPAPIRegisterOrLogin
type ASLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantTag string `protobuf:"bytes,1,opt,name=MerchantTag,proto3" json:"MerchantTag,omitempty"` //商户标识  相当于平台标识
	UserName    string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`       //用户名  //保证唯一性
	Ts          int64  `protobuf:"varint,3,opt,name=Ts,proto3" json:"Ts,omitempty"`                  //时间戳
	Sign        string `protobuf:"bytes,4,opt,name=Sign,proto3" json:"Sign,omitempty"`               //验证商户秘钥 md5 fmt.Sprintf("%v%v%v%v", MerchantTag,UserName, 商户秘钥,args.Ts)
}

func (x *ASLogin) Reset() {
	*x = ASLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASLogin) ProtoMessage() {}

func (x *ASLogin) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASLogin.ProtoReflect.Descriptor instead.
func (*ASLogin) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{0}
}

func (x *ASLogin) GetMerchantTag() string {
	if x != nil {
		return x.MerchantTag
	}
	return ""
}

func (x *ASLogin) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ASLogin) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ASLogin) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type SALogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   TagCode `protobuf:"varint,1,opt,name=Tag,proto3,enum=qpapi.TagCode" json:"Tag,omitempty"` //错误码
	Msg   string  `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`                     //错误信息(选填)
	Token string  `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	Snid  int32   `protobuf:"varint,4,opt,name=Snid,proto3" json:"Snid,omitempty"`
}

func (x *SALogin) Reset() {
	*x = SALogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SALogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SALogin) ProtoMessage() {}

func (x *SALogin) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SALogin.ProtoReflect.Descriptor instead.
func (*SALogin) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{1}
}

func (x *SALogin) GetTag() TagCode {
	if x != nil {
		return x.Tag
	}
	return TagCode_UNKNOWN
}

func (x *SALogin) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SALogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SALogin) GetSnid() int32 {
	if x != nil {
		return x.Snid
	}
	return 0
}

//加币
// [action] /api/Game/QPAPIAddSubCoinById
type ASAddCoinById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`       //用户名  //保证唯一性
	Gold        int64  `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"`              //加币金额
	BillNo      int64  `protobuf:"varint,3,opt,name=BillNo,proto3" json:"BillNo,omitempty"`          //订单号
	MerchantTag string `protobuf:"bytes,4,opt,name=MerchantTag,proto3" json:"MerchantTag,omitempty"` //商户标识  相当于平台标识
	Ts          int64  `protobuf:"varint,5,opt,name=Ts,proto3" json:"Ts,omitempty"`                  //时间戳
	Sign        string `protobuf:"bytes,6,opt,name=Sign,proto3" json:"Sign,omitempty"`               //验证商户秘钥 md5 fmt.Sprintf("%v%v%v%v%v%v", Username,Gold,BillNo，MerchantTag, 商户秘钥,args.Ts)
}

func (x *ASAddCoinById) Reset() {
	*x = ASAddCoinById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASAddCoinById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASAddCoinById) ProtoMessage() {}

func (x *ASAddCoinById) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASAddCoinById.ProtoReflect.Descriptor instead.
func (*ASAddCoinById) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{2}
}

func (x *ASAddCoinById) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ASAddCoinById) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ASAddCoinById) GetBillNo() int64 {
	if x != nil {
		return x.BillNo
	}
	return 0
}

func (x *ASAddCoinById) GetMerchantTag() string {
	if x != nil {
		return x.MerchantTag
	}
	return ""
}

func (x *ASAddCoinById) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ASAddCoinById) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 返回
type SAAddCoinById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag TagCode `protobuf:"varint,1,opt,name=Tag,proto3,enum=qpapi.TagCode" json:"Tag,omitempty"` //错误码
	Msg string  `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`                     //错误信息(选填)
}

func (x *SAAddCoinById) Reset() {
	*x = SAAddCoinById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAAddCoinById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAAddCoinById) ProtoMessage() {}

func (x *SAAddCoinById) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAAddCoinById.ProtoReflect.Descriptor instead.
func (*SAAddCoinById) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{3}
}

func (x *SAAddCoinById) GetTag() TagCode {
	if x != nil {
		return x.Tag
	}
	return TagCode_UNKNOWN
}

func (x *SAAddCoinById) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PlayerCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"` //用户名
	Gold     int64  `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"`
	Bank     int64  `protobuf:"varint,3,opt,name=Bank,proto3" json:"Bank,omitempty"`
}

func (x *PlayerCoinData) Reset() {
	*x = PlayerCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCoinData) ProtoMessage() {}

func (x *PlayerCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCoinData.ProtoReflect.Descriptor instead.
func (*PlayerCoinData) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerCoinData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlayerCoinData) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *PlayerCoinData) GetBank() int64 {
	if x != nil {
		return x.Bank
	}
	return 0
}

//查用户金币  /api/Member/QPGetMemberGoldById
type ASMemberGold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`       //用户名  //保证唯一性
	MerchantTag string `protobuf:"bytes,2,opt,name=MerchantTag,proto3" json:"MerchantTag,omitempty"` //商户标识  相当于平台标识
	Ts          int64  `protobuf:"varint,3,opt,name=Ts,proto3" json:"Ts,omitempty"`                  //时间戳
	Sign        string `protobuf:"bytes,4,opt,name=Sign,proto3" json:"Sign,omitempty"`               //验证商户秘钥 md5 fmt.Sprintf("%v%v%v%v", Username,MerchantTag, 商户秘钥,args.Ts)
}

func (x *ASMemberGold) Reset() {
	*x = ASMemberGold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASMemberGold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASMemberGold) ProtoMessage() {}

func (x *ASMemberGold) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASMemberGold.ProtoReflect.Descriptor instead.
func (*ASMemberGold) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{5}
}

func (x *ASMemberGold) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ASMemberGold) GetMerchantTag() string {
	if x != nil {
		return x.MerchantTag
	}
	return ""
}

func (x *ASMemberGold) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ASMemberGold) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type SAMemberGold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  TagCode         `protobuf:"varint,1,opt,name=Tag,proto3,enum=qpapi.TagCode" json:"Tag,omitempty"` //错误码
	Msg  string          `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`                     //错误信息(选填)
	Data *PlayerCoinData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`                   //用户金币
}

func (x *SAMemberGold) Reset() {
	*x = SAMemberGold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMemberGold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMemberGold) ProtoMessage() {}

func (x *SAMemberGold) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMemberGold.ProtoReflect.Descriptor instead.
func (*SAMemberGold) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{6}
}

func (x *SAMemberGold) GetTag() TagCode {
	if x != nil {
		return x.Tag
	}
	return TagCode_UNKNOWN
}

func (x *SAMemberGold) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SAMemberGold) GetData() *PlayerCoinData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 游戏记录信息
type GameHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNumber  string `protobuf:"bytes,1,opt,name=GameNumber,proto3" json:"GameNumber,omitempty"`    // 游戏编号
	CreatedTime int64  `protobuf:"varint,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"` // 时间
	Multiple    int64  `protobuf:"varint,3,opt,name=Multiple,proto3" json:"Multiple,omitempty"`       //下注倍率
	Hash        string `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`                //Hash
}

func (x *GameHistoryInfo) Reset() {
	*x = GameHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHistoryInfo) ProtoMessage() {}

func (x *GameHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHistoryInfo.ProtoReflect.Descriptor instead.
func (*GameHistoryInfo) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{7}
}

func (x *GameHistoryInfo) GetGameNumber() string {
	if x != nil {
		return x.GameNumber
	}
	return ""
}

func (x *GameHistoryInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *GameHistoryInfo) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *GameHistoryInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// 玩家记录信息
type PlayerHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpinID          string `protobuf:"bytes,1,opt,name=SpinID,proto3" json:"SpinID,omitempty"`                    // 操作id
	CreatedTime     int64  `protobuf:"varint,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`         // 时间
	TotalBetValue   int64  `protobuf:"varint,3,opt,name=TotalBetValue,proto3" json:"TotalBetValue,omitempty"`     // 总下注
	TotalPriceValue int64  `protobuf:"varint,4,opt,name=TotalPriceValue,proto3" json:"TotalPriceValue,omitempty"` // 总赢分
	IsFree          bool   `protobuf:"varint,5,opt,name=IsFree,proto3" json:"IsFree,omitempty"`                   // 是否免费
	TotalBonusValue int64  `protobuf:"varint,6,opt,name=TotalBonusValue,proto3" json:"TotalBonusValue,omitempty"` // 是否免费
	Multiple        int64  `protobuf:"varint,7,opt,name=Multiple,proto3" json:"Multiple,omitempty"`               //下注倍率
	Logid           string `protobuf:"bytes,8,opt,name=Logid,proto3" json:"Logid,omitempty"`                      //logid
	Gameid          int32  `protobuf:"varint,9,opt,name=Gameid,proto3" json:"Gameid,omitempty"`                   //游戏id
	UserName        string `protobuf:"bytes,10,opt,name=UserName,proto3" json:"UserName,omitempty"`               //用户名
}

func (x *PlayerHistoryInfo) Reset() {
	*x = PlayerHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerHistoryInfo) ProtoMessage() {}

func (x *PlayerHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerHistoryInfo.ProtoReflect.Descriptor instead.
func (*PlayerHistoryInfo) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerHistoryInfo) GetSpinID() string {
	if x != nil {
		return x.SpinID
	}
	return ""
}

func (x *PlayerHistoryInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *PlayerHistoryInfo) GetTotalBetValue() int64 {
	if x != nil {
		return x.TotalBetValue
	}
	return 0
}

func (x *PlayerHistoryInfo) GetTotalPriceValue() int64 {
	if x != nil {
		return x.TotalPriceValue
	}
	return 0
}

func (x *PlayerHistoryInfo) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

func (x *PlayerHistoryInfo) GetTotalBonusValue() int64 {
	if x != nil {
		return x.TotalBonusValue
	}
	return 0
}

func (x *PlayerHistoryInfo) GetMultiple() int64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *PlayerHistoryInfo) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *PlayerHistoryInfo) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *PlayerHistoryInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

//获取用户注单记录游戏记录 /api/Member/QPGetGameHistory
type SAPlayerHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag           TagCode              `protobuf:"varint,1,opt,name=Tag,proto3,enum=qpapi.TagCode" json:"Tag,omitempty"` //错误码
	Msg           string               `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`                     //错误信息(选填)
	PageNo        int32                `protobuf:"varint,3,opt,name=PageNo,proto3" json:"PageNo,omitempty"`              //当前页码
	PageSize      int32                `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`          //每页数量
	PageSum       int32                `protobuf:"varint,5,opt,name=PageSum,proto3" json:"PageSum,omitempty"`            //总页码
	PlayerHistory []*PlayerHistoryInfo `protobuf:"bytes,6,rep,name=PlayerHistory,proto3" json:"PlayerHistory,omitempty"`
	GameHistory   []*GameHistoryInfo   `protobuf:"bytes,7,rep,name=GameHistory,proto3" json:"GameHistory,omitempty"`
}

func (x *SAPlayerHistory) Reset() {
	*x = SAPlayerHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAPlayerHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAPlayerHistory) ProtoMessage() {}

func (x *SAPlayerHistory) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAPlayerHistory.ProtoReflect.Descriptor instead.
func (*SAPlayerHistory) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{9}
}

func (x *SAPlayerHistory) GetTag() TagCode {
	if x != nil {
		return x.Tag
	}
	return TagCode_UNKNOWN
}

func (x *SAPlayerHistory) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SAPlayerHistory) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *SAPlayerHistory) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SAPlayerHistory) GetPageSum() int32 {
	if x != nil {
		return x.PageSum
	}
	return 0
}

func (x *SAPlayerHistory) GetPlayerHistory() []*PlayerHistoryInfo {
	if x != nil {
		return x.PlayerHistory
	}
	return nil
}

func (x *SAPlayerHistory) GetGameHistory() []*GameHistoryInfo {
	if x != nil {
		return x.GameHistory
	}
	return nil
}

type ASPlayerHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`                  //用户名  //保证唯一性
	MerchantTag      string `protobuf:"bytes,2,opt,name=MerchantTag,proto3" json:"MerchantTag,omitempty"`            //商户标识  相当于平台标识
	GameHistoryModel int32  `protobuf:"varint,3,opt,name=GameHistoryModel,proto3" json:"GameHistoryModel,omitempty"` //1:注单记录   3：游戏记录
	StartTime        int64  `protobuf:"varint,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`               //查询开始时间
	EndTime          int64  `protobuf:"varint,5,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                   //查询结束时间
	PageNo           int32  `protobuf:"varint,6,opt,name=PageNo,proto3" json:"PageNo,omitempty"`                     //当前页码
	PageSize         int32  `protobuf:"varint,7,opt,name=PageSize,proto3" json:"PageSize,omitempty"`                 //每页数量
	Ts               int64  `protobuf:"varint,8,opt,name=Ts,proto3" json:"Ts,omitempty"`                             //时间戳
	Sign             string `protobuf:"bytes,9,opt,name=Sign,proto3" json:"Sign,omitempty"`                          //验证商户秘钥 md5 fmt.Sprintf("%v%v%v%v%v%v%v%v%v", Username,MerchantTag,GameHistoryModel，StartTime,EndTime,PageNo,PageSize, 商户秘钥,args.Ts)
}

func (x *ASPlayerHistory) Reset() {
	*x = ASPlayerHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASPlayerHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASPlayerHistory) ProtoMessage() {}

func (x *ASPlayerHistory) ProtoReflect() protoreflect.Message {
	mi := &file_qpapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASPlayerHistory.ProtoReflect.Descriptor instead.
func (*ASPlayerHistory) Descriptor() ([]byte, []int) {
	return file_qpapi_proto_rawDescGZIP(), []int{10}
}

func (x *ASPlayerHistory) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ASPlayerHistory) GetMerchantTag() string {
	if x != nil {
		return x.MerchantTag
	}
	return ""
}

func (x *ASPlayerHistory) GetGameHistoryModel() int32 {
	if x != nil {
		return x.GameHistoryModel
	}
	return 0
}

func (x *ASPlayerHistory) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ASPlayerHistory) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ASPlayerHistory) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ASPlayerHistory) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ASPlayerHistory) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ASPlayerHistory) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

var File_qpapi_proto protoreflect.FileDescriptor

var file_qpapi_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x71, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x71,
	0x70, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x07, 0x41, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x54, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x22, 0x67, 0x0a, 0x07, 0x53, 0x41, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a,
	0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6e, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6e, 0x69, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x0d,
	0x41, 0x53, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x42, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42,
	0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x43, 0x0a, 0x0d, 0x53,
	0x41, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x54, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x6f,
	0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x42, 0x61, 0x6e, 0x6b, 0x22, 0x70, 0x0a, 0x0c, 0x41, 0x53, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x6d, 0x0a, 0x0c, 0x53, 0x41, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x70, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xc5, 0x02,
	0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x70, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x46, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x0f, 0x53, 0x41, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x71, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x3e, 0x0a, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0b, 0x47,
	0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x71, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x8b, 0x02, 0x0a, 0x0f, 0x41, 0x53, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53,
	0x69, 0x67, 0x6e, 0x2a, 0x55, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b,
	0x71, 0x70, 0x61, 0x70, 0x69, 0x50, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qpapi_proto_rawDescOnce sync.Once
	file_qpapi_proto_rawDescData = file_qpapi_proto_rawDesc
)

func file_qpapi_proto_rawDescGZIP() []byte {
	file_qpapi_proto_rawDescOnce.Do(func() {
		file_qpapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_qpapi_proto_rawDescData)
	})
	return file_qpapi_proto_rawDescData
}

var file_qpapi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_qpapi_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_qpapi_proto_goTypes = []interface{}{
	(TagCode)(0),              // 0: qpapi.TagCode
	(*ASLogin)(nil),           // 1: qpapi.ASLogin
	(*SALogin)(nil),           // 2: qpapi.SALogin
	(*ASAddCoinById)(nil),     // 3: qpapi.ASAddCoinById
	(*SAAddCoinById)(nil),     // 4: qpapi.SAAddCoinById
	(*PlayerCoinData)(nil),    // 5: qpapi.PlayerCoinData
	(*ASMemberGold)(nil),      // 6: qpapi.ASMemberGold
	(*SAMemberGold)(nil),      // 7: qpapi.SAMemberGold
	(*GameHistoryInfo)(nil),   // 8: qpapi.GameHistoryInfo
	(*PlayerHistoryInfo)(nil), // 9: qpapi.PlayerHistoryInfo
	(*SAPlayerHistory)(nil),   // 10: qpapi.SAPlayerHistory
	(*ASPlayerHistory)(nil),   // 11: qpapi.ASPlayerHistory
}
var file_qpapi_proto_depIdxs = []int32{
	0, // 0: qpapi.SALogin.Tag:type_name -> qpapi.TagCode
	0, // 1: qpapi.SAAddCoinById.Tag:type_name -> qpapi.TagCode
	0, // 2: qpapi.SAMemberGold.Tag:type_name -> qpapi.TagCode
	5, // 3: qpapi.SAMemberGold.Data:type_name -> qpapi.PlayerCoinData
	0, // 4: qpapi.SAPlayerHistory.Tag:type_name -> qpapi.TagCode
	9, // 5: qpapi.SAPlayerHistory.PlayerHistory:type_name -> qpapi.PlayerHistoryInfo
	8, // 6: qpapi.SAPlayerHistory.GameHistory:type_name -> qpapi.GameHistoryInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_qpapi_proto_init() }
func file_qpapi_proto_init() {
	if File_qpapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qpapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SALogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASAddCoinById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAAddCoinById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASMemberGold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAMemberGold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAPlayerHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASPlayerHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qpapi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qpapi_proto_goTypes,
		DependencyIndexes: file_qpapi_proto_depIdxs,
		EnumInfos:         file_qpapi_proto_enumTypes,
		MessageInfos:      file_qpapi_proto_msgTypes,
	}.Build()
	File_qpapi_proto = out.File
	file_qpapi_proto_rawDesc = nil
	file_qpapi_proto_goTypes = nil
	file_qpapi_proto_depIdxs = nil
}
