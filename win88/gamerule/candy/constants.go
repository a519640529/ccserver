package candy

// 糖果
const (
	Element_Min       int = iota // 0 (wild+蓝色圆缺+红色三角)
	Element_VUANGMIEN            // 1 JACKPOT WILD
	Element_RONG                 // 2 橘色圆形
	Element_NGOC                 // 3 绿色方形
	Element_XEDAOMO              // 4 紫色长条
	Element_QUEKEO               // 5 蓝色圆缺
	Element_RANHMI               // 6 红色三角
	Element_Max
)

var DebugSlotData = []int{
	1, 1, 1,
	5, 2, 2,
	6, 2, 3,
}
var Element_NAME_MAP = map[int]string{
	Element_VUANGMIEN: "[JACKPOT WILD]",
	Element_RONG:      "[橘色圆形]",
	Element_NGOC:      "[绿色方形]",
	Element_XEDAOMO:   "[紫色长条]",
	Element_QUEKEO:    "[蓝色圆缺]",
	Element_RANHMI:    "[红色三角]",
	-1:                "[   -   ]",
}

var AllLineArray = [][]int{
	{0, 1, 2}, //线条1
	{3, 4, 5}, //线条2
	{6, 7, 8}, //线条3
	{0, 7, 2}, //线条4
	{6, 1, 8}, //线条5
	{0, 4, 2}, //线条6
	{0, 4, 8}, //线条7
	{6, 4, 2}, //线条8
	{3, 7, 5}, //线条9
	{3, 1, 5}, //线条10
	{6, 4, 8}, //线条11
	{0, 1, 5}, //线条12
	{3, 4, 8}, //线条13
	{3, 4, 2}, //线条14
	{6, 7, 5}, //线条15
	{3, 1, 2}, //线条16
	{6, 4, 5}, //线条17
	{0, 4, 5}, //线条18
	{3, 7, 8}, //线条19
	{0, 7, 5}, //线条20
}

const (
	LINE_ROW      int = 3  //行数
	LINE_CELL     int = 3  //列数
	LINENUM       int = 20 //线条数
	ELEMENT_TOTAL     = LINE_ROW * LINE_CELL
)

//所有元素对应的赔率 (统一 * 10倍，返回时候 / 10 还原，底注配置10，暂不会出现问题)
var LineScore = [Element_Max][LINE_CELL]int64{
	{0, 0, 12},  // 0 (wild+橘色圆形+绿色方形)
	{0, 0, 0},   // 1 JACKPOT WILD
	{0, 0, 850}, // 2 橘色圆形
	{0, 0, 400}, // 3 绿色方形
	{0, 0, 200}, // 4 紫色长条
	{0, 8, 70},  // 5 蓝色圆缺
	{0, 4, 30},  // 6 红色三角
}

var AllBetLines = []int64{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}

// len:100
var symbol1 = []int{
	1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
}

// len:117
var symbol2 = []int{
	1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
}

// len：20
var defalutData = [][]int{
	{5, 2, 6, 4, 4, 6, 5, 4, 6},
	{4, 4, 6, 4, 2, 6, 5, 2, 6},
	{6, 5, 2, 4, 5, 2, 6, 4, 3},
	{2, 4, 3, 5, 3, 3, 4, 4, 6},
	{4, 2, 2, 4, 5, 4, 2, 5, 6},
	{4, 5, 4, 4, 2, 6, 4, 3, 4},
	{4, 3, 6, 2, 4, 6, 4, 5, 2},
	{6, 4, 4, 6, 5, 2, 3, 5, 4},
	{3, 3, 4, 4, 6, 2, 4, 3, 5},
	{3, 3, 5, 2, 2, 6, 4, 2, 6},
	{4, 5, 3, 4, 5, 4, 2, 5, 4},
	{5, 4, 6, 4, 4, 6, 5, 4, 2},
	{5, 4, 6, 5, 3, 4, 4, 2, 3},
	{5, 2, 6, 3, 4, 6, 5, 2, 6},
	{3, 5, 4, 4, 2, 6, 4, 5, 4},
	{6, 5, 2, 6, 5, 2, 4, 5, 2},
	{3, 5, 6, 3, 4, 6, 4, 4, 6},
	{3, 4, 2, 6, 3, 5, 3, 2, 2},
	{2, 6, 3, 4, 4, 2, 3, 4, 2},
	{4, 2, 2, 4, 4, 2, 6, 5, 2},
	{2, 4, 4, 6, 2, 3, 5, 3, 3},
}

// len:1000
var luckyDataRate = []int64{
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
}

// jack params
const (
	CANDY_JACKPOT_InitJackpot             int = iota //初始化奖池倍率
	CANDY_JACKPOT_LIMITWIN_PRIZELOW                  //现金池不足时 最多赚取投注的多少倍
	CANDY_JACKPOT_LIMITWIN_PRIZEHIGH_ROOM            // 当前房间 现金池充足时 最多赚取投注的多少倍
)

// 对应房间的scenetype
const (
	ROOM1 int = iota + 1
	ROOM2
	ROOM3
	ROOM4
)

type Symbol int

const (
	SYMBOL1 Symbol = iota + 1
	SYMBOL2
)

// 特殊中线
const (
	LINE_BIGWILD   = iota // 0 (wild+橘色圆形+绿色方形)
	LINE_SMALLWILD        // 1 (wild+蓝色圆缺+红色三角)
)
