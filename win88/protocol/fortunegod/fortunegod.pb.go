// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: fortunegod.proto

package fortunegod

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//财神到协议
//操作结果
type OpResultCode int32

const (
	OpResultCode_OPRC_Sucess OpResultCode = 0 //成功
	OpResultCode_OPRC_Error  OpResultCode = 1 //失败
)

// Enum value maps for OpResultCode.
var (
	OpResultCode_name = map[int32]string{
		0: "OPRC_Sucess",
		1: "OPRC_Error",
	}
	OpResultCode_value = map[string]int32{
		"OPRC_Sucess": 0,
		"OPRC_Error":  1,
	}
)

func (x OpResultCode) Enum() *OpResultCode {
	p := new(OpResultCode)
	*p = x
	return p
}

func (x OpResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_fortunegod_proto_enumTypes[0].Descriptor()
}

func (OpResultCode) Type() protoreflect.EnumType {
	return &file_fortunegod_proto_enumTypes[0]
}

func (x OpResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpResultCode.Descriptor instead.
func (OpResultCode) EnumDescriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{0}
}

//财神到
type FortuneGodPacketID int32

const (
	FortuneGodPacketID_PACKET_FORTUNEGOD_ZERO           FortuneGodPacketID = 0    // 弃用消息号
	FortuneGodPacketID_PACKET_SC_FORTUNEGOD_ROOMINFO    FortuneGodPacketID = 5100 //房间信息
	FortuneGodPacketID_PACKET_CS_FORTUNEGOD_PLAYEROP    FortuneGodPacketID = 5101 //玩家操作（客户-》服务）
	FortuneGodPacketID_PACKET_SC_FORTUNEGOD_PLAYEROP    FortuneGodPacketID = 5102 //玩家操作（服务-》客户）
	FortuneGodPacketID_PACKET_SC_FORTUNEGOD_ROOMSTATE   FortuneGodPacketID = 5103 //房间状态
	FortuneGodPacketID_PACKET_SC_FORTUNEGOD_GAMEBALANCE FortuneGodPacketID = 5104 //游戏结算
)

// Enum value maps for FortuneGodPacketID.
var (
	FortuneGodPacketID_name = map[int32]string{
		0:    "PACKET_FORTUNEGOD_ZERO",
		5100: "PACKET_SC_FORTUNEGOD_ROOMINFO",
		5101: "PACKET_CS_FORTUNEGOD_PLAYEROP",
		5102: "PACKET_SC_FORTUNEGOD_PLAYEROP",
		5103: "PACKET_SC_FORTUNEGOD_ROOMSTATE",
		5104: "PACKET_SC_FORTUNEGOD_GAMEBALANCE",
	}
	FortuneGodPacketID_value = map[string]int32{
		"PACKET_FORTUNEGOD_ZERO":           0,
		"PACKET_SC_FORTUNEGOD_ROOMINFO":    5100,
		"PACKET_CS_FORTUNEGOD_PLAYEROP":    5101,
		"PACKET_SC_FORTUNEGOD_PLAYEROP":    5102,
		"PACKET_SC_FORTUNEGOD_ROOMSTATE":   5103,
		"PACKET_SC_FORTUNEGOD_GAMEBALANCE": 5104,
	}
)

func (x FortuneGodPacketID) Enum() *FortuneGodPacketID {
	p := new(FortuneGodPacketID)
	*p = x
	return p
}

func (x FortuneGodPacketID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FortuneGodPacketID) Descriptor() protoreflect.EnumDescriptor {
	return file_fortunegod_proto_enumTypes[1].Descriptor()
}

func (FortuneGodPacketID) Type() protoreflect.EnumType {
	return &file_fortunegod_proto_enumTypes[1]
}

func (x FortuneGodPacketID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FortuneGodPacketID.Descriptor instead.
func (FortuneGodPacketID) EnumDescriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{1}
}

type FortuneGodPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                //名字
	SnId        int32  `protobuf:"varint,2,opt,name=SnId,proto3" json:"SnId,omitempty"`               //账号
	Head        int32  `protobuf:"varint,3,opt,name=Head,proto3" json:"Head,omitempty"`               //头像
	Sex         int32  `protobuf:"varint,4,opt,name=Sex,proto3" json:"Sex,omitempty"`                 //性别
	Coin        int64  `protobuf:"varint,5,opt,name=Coin,proto3" json:"Coin,omitempty"`               //金币
	HeadOutLine int32  `protobuf:"varint,6,opt,name=HeadOutLine,proto3" json:"HeadOutLine,omitempty"` //头像框
	VIP         int32  `protobuf:"varint,7,opt,name=VIP,proto3" json:"VIP,omitempty"`
}

func (x *FortuneGodPlayerData) Reset() {
	*x = FortuneGodPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortuneGodPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortuneGodPlayerData) ProtoMessage() {}

func (x *FortuneGodPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortuneGodPlayerData.ProtoReflect.Descriptor instead.
func (*FortuneGodPlayerData) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{0}
}

func (x *FortuneGodPlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FortuneGodPlayerData) GetSnId() int32 {
	if x != nil {
		return x.SnId
	}
	return 0
}

func (x *FortuneGodPlayerData) GetHead() int32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *FortuneGodPlayerData) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *FortuneGodPlayerData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *FortuneGodPlayerData) GetHeadOutLine() int32 {
	if x != nil {
		return x.HeadOutLine
	}
	return 0
}

func (x *FortuneGodPlayerData) GetVIP() int32 {
	if x != nil {
		return x.VIP
	}
	return 0
}

//每条线的结算数据
type FortuneGodLinesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos       []int32 `protobuf:"varint,1,rep,packed,name=Pos,proto3" json:"Pos,omitempty"`      //中奖位置 索引从0开始
	WinScore  int32   `protobuf:"varint,2,opt,name=WinScore,proto3" json:"WinScore,omitempty"`   //中奖分数
	WinItem   int32   `protobuf:"varint,3,opt,name=WinItem,proto3" json:"WinItem,omitempty"`     //中奖的元素
	Rate      int32   `protobuf:"varint,4,opt,name=Rate,proto3" json:"Rate,omitempty"`           //中奖倍数
	LineCount int32   `protobuf:"varint,5,opt,name=LineCount,proto3" json:"LineCount,omitempty"` //中了几行
	PosLen    int32   `protobuf:"varint,6,opt,name=PosLen,proto3" json:"PosLen,omitempty"`       //多少个元素中的
}

func (x *FortuneGodLinesInfo) Reset() {
	*x = FortuneGodLinesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortuneGodLinesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortuneGodLinesInfo) ProtoMessage() {}

func (x *FortuneGodLinesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortuneGodLinesInfo.ProtoReflect.Descriptor instead.
func (*FortuneGodLinesInfo) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{1}
}

func (x *FortuneGodLinesInfo) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *FortuneGodLinesInfo) GetWinScore() int32 {
	if x != nil {
		return x.WinScore
	}
	return 0
}

func (x *FortuneGodLinesInfo) GetWinItem() int32 {
	if x != nil {
		return x.WinItem
	}
	return 0
}

func (x *FortuneGodLinesInfo) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *FortuneGodLinesInfo) GetLineCount() int32 {
	if x != nil {
		return x.LineCount
	}
	return 0
}

func (x *FortuneGodLinesInfo) GetPosLen() int32 {
	if x != nil {
		return x.PosLen
	}
	return 0
}

//发送给客户端的数据 结算
type SC_FORTUNEGOD_GAMEBALANCE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards           []int32                `protobuf:"varint,1,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`              //需要翻出的牌，数组15个,如：[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
	AllWinScore     int64                  `protobuf:"varint,2,opt,name=AllWinScore,proto3" json:"AllWinScore,omitempty"`         //中奖的总分数
	Lines           []*FortuneGodLinesInfo `protobuf:"bytes,3,rep,name=Lines,proto3" json:"Lines,omitempty"`                      //中奖的结果数组,存每条线的情况
	FreeTimes       int32                  `protobuf:"varint,4,opt,name=FreeTimes,proto3" json:"FreeTimes,omitempty"`             //剩余免费转动次数
	FreeType        int32                  `protobuf:"varint,5,opt,name=FreeType,proto3" json:"FreeType,omitempty"`               //免费转动类型
	Coin            int32                  `protobuf:"varint,6,opt,name=Coin,proto3" json:"Coin,omitempty"`                       //玩家身上的钱
	AllFreeWinScore int32                  `protobuf:"varint,7,opt,name=AllFreeWinScore,proto3" json:"AllFreeWinScore,omitempty"` //玩家免费次数得到的钱
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) Reset() {
	*x = SC_FORTUNEGOD_GAMEBALANCE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_FORTUNEGOD_GAMEBALANCE) ProtoMessage() {}

func (x *SC_FORTUNEGOD_GAMEBALANCE) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_FORTUNEGOD_GAMEBALANCE.ProtoReflect.Descriptor instead.
func (*SC_FORTUNEGOD_GAMEBALANCE) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{2}
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetAllWinScore() int64 {
	if x != nil {
		return x.AllWinScore
	}
	return 0
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetLines() []*FortuneGodLinesInfo {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetFreeTimes() int32 {
	if x != nil {
		return x.FreeTimes
	}
	return 0
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetFreeType() int32 {
	if x != nil {
		return x.FreeType
	}
	return 0
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *SC_FORTUNEGOD_GAMEBALANCE) GetAllFreeWinScore() int32 {
	if x != nil {
		return x.AllFreeWinScore
	}
	return 0
}

//房间信息
type SC_FORTUNEGOD_ROOMINFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId        int32                   `protobuf:"varint,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`                //房间id
	Creator       int32                   `protobuf:"varint,2,opt,name=Creator,proto3" json:"Creator,omitempty"`              //创建者SnId
	GameId        int32                   `protobuf:"varint,3,opt,name=GameId,proto3" json:"GameId,omitempty"`                //游戏id
	RoomMode      int32                   `protobuf:"varint,4,opt,name=RoomMode,proto3" json:"RoomMode,omitempty"`            //游戏模式
	Params        []int32                 `protobuf:"varint,5,rep,packed,name=Params,proto3" json:"Params,omitempty"`         //规则参数
	Cards         []int32                 `protobuf:"varint,6,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`           //牌数据 (没开牌之前是两个-1)
	State         int32                   `protobuf:"varint,7,opt,name=State,proto3" json:"State,omitempty"`                  //房间当前状态
	BetMap        []int32                 `protobuf:"varint,8,rep,packed,name=BetMap,proto3" json:"BetMap,omitempty"`         // 房间下注数组
	Players       []*FortuneGodPlayerData `protobuf:"bytes,9,rep,name=Players,proto3" json:"Players,omitempty"`               //房间内的玩家信息
	Chip          int32                   `protobuf:"varint,10,opt,name=Chip,proto3" json:"Chip,omitempty"`                   //当前选择的筹码
	LeftFreeTimes int32                   `protobuf:"varint,11,opt,name=LeftFreeTimes,proto3" json:"LeftFreeTimes,omitempty"` //剩余免费转动次数
	SceneType     int32                   `protobuf:"varint,12,opt,name=SceneType,proto3" json:"SceneType,omitempty"`
	GameFreeId    int32                   `protobuf:"varint,13,opt,name=GameFreeId,proto3" json:"GameFreeId,omitempty"`
}

func (x *SC_FORTUNEGOD_ROOMINFO) Reset() {
	*x = SC_FORTUNEGOD_ROOMINFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_FORTUNEGOD_ROOMINFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_FORTUNEGOD_ROOMINFO) ProtoMessage() {}

func (x *SC_FORTUNEGOD_ROOMINFO) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_FORTUNEGOD_ROOMINFO.ProtoReflect.Descriptor instead.
func (*SC_FORTUNEGOD_ROOMINFO) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{3}
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetCreator() int32 {
	if x != nil {
		return x.Creator
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetRoomMode() int32 {
	if x != nil {
		return x.RoomMode
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetParams() []int32 {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetBetMap() []int32 {
	if x != nil {
		return x.BetMap
	}
	return nil
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetPlayers() []*FortuneGodPlayerData {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetChip() int32 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetLeftFreeTimes() int32 {
	if x != nil {
		return x.LeftFreeTimes
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetSceneType() int32 {
	if x != nil {
		return x.SceneType
	}
	return 0
}

func (x *SC_FORTUNEGOD_ROOMINFO) GetGameFreeId() int32 {
	if x != nil {
		return x.GameFreeId
	}
	return 0
}

//玩家操作
type CS_FORTUNEGOD_PLAYEROP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpCode int32   `protobuf:"varint,1,opt,name=OpCode,proto3" json:"OpCode,omitempty"`        //操作码 1:开始{1,押注倍数} 2:快速开始{1,押注倍数} 3：自动开始{1,押注倍数} 4：开始小游戏
	Params []int64 `protobuf:"varint,2,rep,packed,name=Params,proto3" json:"Params,omitempty"` //操作参数
}

func (x *CS_FORTUNEGOD_PLAYEROP) Reset() {
	*x = CS_FORTUNEGOD_PLAYEROP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_FORTUNEGOD_PLAYEROP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_FORTUNEGOD_PLAYEROP) ProtoMessage() {}

func (x *CS_FORTUNEGOD_PLAYEROP) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_FORTUNEGOD_PLAYEROP.ProtoReflect.Descriptor instead.
func (*CS_FORTUNEGOD_PLAYEROP) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{4}
}

func (x *CS_FORTUNEGOD_PLAYEROP) GetOpCode() int32 {
	if x != nil {
		return x.OpCode
	}
	return 0
}

func (x *CS_FORTUNEGOD_PLAYEROP) GetParams() []int64 {
	if x != nil {
		return x.Params
	}
	return nil
}

//玩家操作返回
type SC_FORTUNEGOD_PLAYEROP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnId      int32        `protobuf:"varint,1,opt,name=SnId,proto3" json:"SnId,omitempty"`                                        //玩家ID
	OpCode    int32        `protobuf:"varint,2,opt,name=OpCode,proto3" json:"OpCode,omitempty"`                                    //操作码
	Params    []int64      `protobuf:"varint,3,rep,packed,name=Params,proto3" json:"Params,omitempty"`                             //操作参数
	OpRetCode OpResultCode `protobuf:"varint,4,opt,name=OpRetCode,proto3,enum=fortunegod.OpResultCode" json:"OpRetCode,omitempty"` //操作结果
}

func (x *SC_FORTUNEGOD_PLAYEROP) Reset() {
	*x = SC_FORTUNEGOD_PLAYEROP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_FORTUNEGOD_PLAYEROP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_FORTUNEGOD_PLAYEROP) ProtoMessage() {}

func (x *SC_FORTUNEGOD_PLAYEROP) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_FORTUNEGOD_PLAYEROP.ProtoReflect.Descriptor instead.
func (*SC_FORTUNEGOD_PLAYEROP) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{5}
}

func (x *SC_FORTUNEGOD_PLAYEROP) GetSnId() int32 {
	if x != nil {
		return x.SnId
	}
	return 0
}

func (x *SC_FORTUNEGOD_PLAYEROP) GetOpCode() int32 {
	if x != nil {
		return x.OpCode
	}
	return 0
}

func (x *SC_FORTUNEGOD_PLAYEROP) GetParams() []int64 {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SC_FORTUNEGOD_PLAYEROP) GetOpRetCode() OpResultCode {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_OPRC_Sucess
}

//房间状态
type SC_FORTUNEGOD_ROOMSTATE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"` //房间当前状态
}

func (x *SC_FORTUNEGOD_ROOMSTATE) Reset() {
	*x = SC_FORTUNEGOD_ROOMSTATE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fortunegod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_FORTUNEGOD_ROOMSTATE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_FORTUNEGOD_ROOMSTATE) ProtoMessage() {}

func (x *SC_FORTUNEGOD_ROOMSTATE) ProtoReflect() protoreflect.Message {
	mi := &file_fortunegod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_FORTUNEGOD_ROOMSTATE.ProtoReflect.Descriptor instead.
func (*SC_FORTUNEGOD_ROOMSTATE) Descriptor() ([]byte, []int) {
	return file_fortunegod_proto_rawDescGZIP(), []int{6}
}

func (x *SC_FORTUNEGOD_ROOMSTATE) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

var File_fortunegod_proto protoreflect.FileDescriptor

var file_fortunegod_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x22, 0xac,
	0x01, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x47, 0x6f, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x65, 0x61,
	0x64, 0x4f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x48, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56,
	0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x56, 0x49, 0x50, 0x22, 0xa7, 0x01,
	0x0a, 0x13, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x47, 0x6f, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x03, 0x50, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x4c, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x50, 0x6f, 0x73, 0x4c, 0x65, 0x6e, 0x22, 0x82, 0x02, 0x0a, 0x19, 0x53, 0x43, 0x5f, 0x46,
	0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e,
	0x65, 0x47, 0x6f, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x4c,
	0x69, 0x6e, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x46, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x41, 0x6c, 0x6c,
	0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x8e, 0x03, 0x0a,
	0x16, 0x53, 0x43, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x52,
	0x4f, 0x4f, 0x4d, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x42, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x07, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x47,
	0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x69, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x68, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x65, 0x66,
	0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x65, 0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x65, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x16, 0x43, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x4f, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x53, 0x43, 0x5f, 0x46,
	0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x4f, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f,
	0x0a, 0x17, 0x53, 0x43, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2a,
	0x2f, 0x0a, 0x0c, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x53, 0x75, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x2a, 0xe8, 0x01, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x47, 0x6f, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x5a, 0x45, 0x52,
	0x4f, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1d, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43,
	0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0xec, 0x27, 0x12, 0x22, 0x0a, 0x1d, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x43, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x4f, 0x50, 0x10, 0xed, 0x27, 0x12, 0x22, 0x0a, 0x1d, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45,
	0x47, 0x4f, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x4f, 0x50, 0x10, 0xee, 0x27, 0x12,
	0x23, 0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x46, 0x4f, 0x52,
	0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0xef, 0x27, 0x12, 0x25, 0x0a, 0x20, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53,
	0x43, 0x5f, 0x46, 0x4f, 0x52, 0x54, 0x55, 0x4e, 0x45, 0x47, 0x4f, 0x44, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0xf0, 0x27, 0x42, 0x0e, 0x5a, 0x0c, 0x2e,
	0x3b, 0x66, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x67, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_fortunegod_proto_rawDescOnce sync.Once
	file_fortunegod_proto_rawDescData = file_fortunegod_proto_rawDesc
)

func file_fortunegod_proto_rawDescGZIP() []byte {
	file_fortunegod_proto_rawDescOnce.Do(func() {
		file_fortunegod_proto_rawDescData = protoimpl.X.CompressGZIP(file_fortunegod_proto_rawDescData)
	})
	return file_fortunegod_proto_rawDescData
}

var file_fortunegod_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fortunegod_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fortunegod_proto_goTypes = []interface{}{
	(OpResultCode)(0),                 // 0: fortunegod.OpResultCode
	(FortuneGodPacketID)(0),           // 1: fortunegod.FortuneGodPacketID
	(*FortuneGodPlayerData)(nil),      // 2: fortunegod.FortuneGodPlayerData
	(*FortuneGodLinesInfo)(nil),       // 3: fortunegod.FortuneGodLinesInfo
	(*SC_FORTUNEGOD_GAMEBALANCE)(nil), // 4: fortunegod.SC_FORTUNEGOD_GAMEBALANCE
	(*SC_FORTUNEGOD_ROOMINFO)(nil),    // 5: fortunegod.SC_FORTUNEGOD_ROOMINFO
	(*CS_FORTUNEGOD_PLAYEROP)(nil),    // 6: fortunegod.CS_FORTUNEGOD_PLAYEROP
	(*SC_FORTUNEGOD_PLAYEROP)(nil),    // 7: fortunegod.SC_FORTUNEGOD_PLAYEROP
	(*SC_FORTUNEGOD_ROOMSTATE)(nil),   // 8: fortunegod.SC_FORTUNEGOD_ROOMSTATE
}
var file_fortunegod_proto_depIdxs = []int32{
	3, // 0: fortunegod.SC_FORTUNEGOD_GAMEBALANCE.Lines:type_name -> fortunegod.FortuneGodLinesInfo
	2, // 1: fortunegod.SC_FORTUNEGOD_ROOMINFO.Players:type_name -> fortunegod.FortuneGodPlayerData
	0, // 2: fortunegod.SC_FORTUNEGOD_PLAYEROP.OpRetCode:type_name -> fortunegod.OpResultCode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fortunegod_proto_init() }
func file_fortunegod_proto_init() {
	if File_fortunegod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fortunegod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortuneGodPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortuneGodLinesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_FORTUNEGOD_GAMEBALANCE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_FORTUNEGOD_ROOMINFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_FORTUNEGOD_PLAYEROP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_FORTUNEGOD_PLAYEROP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fortunegod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_FORTUNEGOD_ROOMSTATE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fortunegod_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fortunegod_proto_goTypes,
		DependencyIndexes: file_fortunegod_proto_depIdxs,
		EnumInfos:         file_fortunegod_proto_enumTypes,
		MessageInfos:      file_fortunegod_proto_msgTypes,
	}.Build()
	File_fortunegod_proto = out.File
	file_fortunegod_proto_rawDesc = nil
	file_fortunegod_proto_goTypes = nil
	file_fortunegod_proto_depIdxs = nil
}
