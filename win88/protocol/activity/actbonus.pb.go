// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: actbonus.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//操作结果
type OpResultCode int32

const (
	OpResultCode_OPRC_Sucess OpResultCode = 0 //成功
	OpResultCode_OPRC_Error  OpResultCode = 1 //失败
)

// Enum value maps for OpResultCode.
var (
	OpResultCode_name = map[int32]string{
		0: "OPRC_Sucess",
		1: "OPRC_Error",
	}
	OpResultCode_value = map[string]int32{
		"OPRC_Sucess": 0,
		"OPRC_Error":  1,
	}
)

func (x OpResultCode) Enum() *OpResultCode {
	p := new(OpResultCode)
	*p = x
	return p
}

func (x OpResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_actbonus_proto_enumTypes[0].Descriptor()
}

func (OpResultCode) Type() protoreflect.EnumType {
	return &file_actbonus_proto_enumTypes[0]
}

func (x OpResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpResultCode.Descriptor instead.
func (OpResultCode) EnumDescriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{0}
}

// vip彩金
type VipBonusPacketID int32

const (
	VipBonusPacketID_PACKET_VipBonus_ZERO               VipBonusPacketID = 0    // 弃用消息号
	VipBonusPacketID_PACKET_CS_VipBonus_Info            VipBonusPacketID = 2600 // 彩金信息
	VipBonusPacketID_PACKET_SC_VipBonus_Info            VipBonusPacketID = 2601 // 彩金信息返回
	VipBonusPacketID_PACKET_CS_VipBonus_Get             VipBonusPacketID = 2602 // 领取
	VipBonusPacketID_PACKET_SC_VipBonus_Get             VipBonusPacketID = 2603 // 领取返回
	VipBonusPacketID_PACKET_SC_Notify_ActVipBonus_State VipBonusPacketID = 2604 // 通知活动状态
	VipBonusPacketID_PACKET_SC_Notify_VipGetBonus_State VipBonusPacketID = 2605 // 通知奖励领取状态变化
)

// Enum value maps for VipBonusPacketID.
var (
	VipBonusPacketID_name = map[int32]string{
		0:    "PACKET_VipBonus_ZERO",
		2600: "PACKET_CS_VipBonus_Info",
		2601: "PACKET_SC_VipBonus_Info",
		2602: "PACKET_CS_VipBonus_Get",
		2603: "PACKET_SC_VipBonus_Get",
		2604: "PACKET_SC_Notify_ActVipBonus_State",
		2605: "PACKET_SC_Notify_VipGetBonus_State",
	}
	VipBonusPacketID_value = map[string]int32{
		"PACKET_VipBonus_ZERO":               0,
		"PACKET_CS_VipBonus_Info":            2600,
		"PACKET_SC_VipBonus_Info":            2601,
		"PACKET_CS_VipBonus_Get":             2602,
		"PACKET_SC_VipBonus_Get":             2603,
		"PACKET_SC_Notify_ActVipBonus_State": 2604,
		"PACKET_SC_Notify_VipGetBonus_State": 2605,
	}
)

func (x VipBonusPacketID) Enum() *VipBonusPacketID {
	p := new(VipBonusPacketID)
	*p = x
	return p
}

func (x VipBonusPacketID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipBonusPacketID) Descriptor() protoreflect.EnumDescriptor {
	return file_actbonus_proto_enumTypes[1].Descriptor()
}

func (VipBonusPacketID) Type() protoreflect.EnumType {
	return &file_actbonus_proto_enumTypes[1]
}

func (x VipBonusPacketID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipBonusPacketID.Descriptor instead.
func (VipBonusPacketID) EnumDescriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{1}
}

//显示信息
type VipBonusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelCoin int32 `protobuf:"varint,1,opt,name=LevelCoin,proto3" json:"LevelCoin,omitempty"` // 等级奖励
	DayCoin   int32 `protobuf:"varint,2,opt,name=DayCoin,proto3" json:"DayCoin,omitempty"`     // 日奖励
	WeekCoin  int32 `protobuf:"varint,3,opt,name=WeekCoin,proto3" json:"WeekCoin,omitempty"`   // 周奖励
	MonthCoin int32 `protobuf:"varint,4,opt,name=MonthCoin,proto3" json:"MonthCoin,omitempty"` // 月奖励
}

func (x *VipBonusInfo) Reset() {
	*x = VipBonusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipBonusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipBonusInfo) ProtoMessage() {}

func (x *VipBonusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipBonusInfo.ProtoReflect.Descriptor instead.
func (*VipBonusInfo) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{0}
}

func (x *VipBonusInfo) GetLevelCoin() int32 {
	if x != nil {
		return x.LevelCoin
	}
	return 0
}

func (x *VipBonusInfo) GetDayCoin() int32 {
	if x != nil {
		return x.DayCoin
	}
	return 0
}

func (x *VipBonusInfo) GetWeekCoin() int32 {
	if x != nil {
		return x.WeekCoin
	}
	return 0
}

func (x *VipBonusInfo) GetMonthCoin() int32 {
	if x != nil {
		return x.MonthCoin
	}
	return 0
}

//领取信息
type VipBonusGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=Level,proto3" json:"Level,omitempty"` // 等级奖励领取状态 位运算 1标识领取
	Day   int32 `protobuf:"varint,2,opt,name=Day,proto3" json:"Day,omitempty"`     // 日奖励领取状态 0 未领取 1领取
	Week  int32 `protobuf:"varint,3,opt,name=Week,proto3" json:"Week,omitempty"`   // 周奖励领取状态 0 未领取 1领取
	Month int32 `protobuf:"varint,4,opt,name=Month,proto3" json:"Month,omitempty"` // 月奖励领取状态 0 未领取 1领取
}

func (x *VipBonusGetInfo) Reset() {
	*x = VipBonusGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipBonusGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipBonusGetInfo) ProtoMessage() {}

func (x *VipBonusGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipBonusGetInfo.ProtoReflect.Descriptor instead.
func (*VipBonusGetInfo) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{1}
}

func (x *VipBonusGetInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VipBonusGetInfo) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *VipBonusGetInfo) GetWeek() int32 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *VipBonusGetInfo) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

// vip奖励信息返回
type SCVipBonusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos   []*VipBonusInfo  `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`     // 彩金信息
	GetInfo *VipBonusGetInfo `protobuf:"bytes,2,opt,name=GetInfo,proto3" json:"GetInfo,omitempty"` //领取信息
}

func (x *SCVipBonusInfo) Reset() {
	*x = SCVipBonusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCVipBonusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCVipBonusInfo) ProtoMessage() {}

func (x *SCVipBonusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCVipBonusInfo.ProtoReflect.Descriptor instead.
func (*SCVipBonusInfo) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{2}
}

func (x *SCVipBonusInfo) GetInfos() []*VipBonusInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *SCVipBonusInfo) GetGetInfo() *VipBonusGetInfo {
	if x != nil {
		return x.GetInfo
	}
	return nil
}

// 获得vip奖励信息
type CSVipBonusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSVipBonusInfo) Reset() {
	*x = CSVipBonusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSVipBonusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVipBonusInfo) ProtoMessage() {}

func (x *CSVipBonusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVipBonusInfo.ProtoReflect.Descriptor instead.
func (*CSVipBonusInfo) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{3}
}

// 领取奖励返回
type SCVipBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpRetCode OpResultCode     `protobuf:"varint,1,opt,name=OpRetCode,proto3,enum=activity.OpResultCode" json:"OpRetCode,omitempty"` // 错误码
	GetInfo   *VipBonusGetInfo `protobuf:"bytes,2,opt,name=GetInfo,proto3" json:"GetInfo,omitempty"`                                 //领取成功更新信息
}

func (x *SCVipBonus) Reset() {
	*x = SCVipBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCVipBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCVipBonus) ProtoMessage() {}

func (x *SCVipBonus) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCVipBonus.ProtoReflect.Descriptor instead.
func (*SCVipBonus) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{4}
}

func (x *SCVipBonus) GetOpRetCode() OpResultCode {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_OPRC_Sucess
}

func (x *SCVipBonus) GetGetInfo() *VipBonusGetInfo {
	if x != nil {
		return x.GetInfo
	}
	return nil
}

// 领取奖励
type CSVipBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectBonus int32 `protobuf:"varint,1,opt,name=SelectBonus,proto3" json:"SelectBonus,omitempty"` // 选择奖励 1 vip等级 2 vip日 3 vip周 4vip 月
	SelectVip   int32 `protobuf:"varint,2,opt,name=SelectVip,proto3" json:"SelectVip,omitempty"`     // Vip等级礼包 用于领取vip等级奖励使用
}

func (x *CSVipBonus) Reset() {
	*x = CSVipBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSVipBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVipBonus) ProtoMessage() {}

func (x *CSVipBonus) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVipBonus.ProtoReflect.Descriptor instead.
func (*CSVipBonus) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{5}
}

func (x *CSVipBonus) GetSelectBonus() int32 {
	if x != nil {
		return x.SelectBonus
	}
	return 0
}

func (x *CSVipBonus) GetSelectVip() int32 {
	if x != nil {
		return x.SelectVip
	}
	return 0
}

// 通知活动状态变化
type SCNotifyVipBonusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"` // 状态 0 关闭 1开启
}

func (x *SCNotifyVipBonusState) Reset() {
	*x = SCNotifyVipBonusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCNotifyVipBonusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCNotifyVipBonusState) ProtoMessage() {}

func (x *SCNotifyVipBonusState) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCNotifyVipBonusState.ProtoReflect.Descriptor instead.
func (*SCNotifyVipBonusState) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{6}
}

func (x *SCNotifyVipBonusState) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 通知活动状态变化
type SCNotifyVipGetBonusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetInfo *VipBonusGetInfo `protobuf:"bytes,1,opt,name=GetInfo,proto3" json:"GetInfo,omitempty"` // 领取信息
}

func (x *SCNotifyVipGetBonusState) Reset() {
	*x = SCNotifyVipGetBonusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actbonus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCNotifyVipGetBonusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCNotifyVipGetBonusState) ProtoMessage() {}

func (x *SCNotifyVipGetBonusState) ProtoReflect() protoreflect.Message {
	mi := &file_actbonus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCNotifyVipGetBonusState.ProtoReflect.Descriptor instead.
func (*SCNotifyVipGetBonusState) Descriptor() ([]byte, []int) {
	return file_actbonus_proto_rawDescGZIP(), []int{7}
}

func (x *SCNotifyVipGetBonusState) GetGetInfo() *VipBonusGetInfo {
	if x != nil {
		return x.GetInfo
	}
	return nil
}

var File_actbonus_proto protoreflect.FileDescriptor

var file_actbonus_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x56,
	0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x79,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x61, 0x79, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x65, 0x65, 0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x65, 0x65, 0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x63, 0x0a,
	0x0f, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x65, 0x65, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x22, 0x73, 0x0a, 0x0e, 0x53, 0x43, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56,
	0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56,
	0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x53, 0x56, 0x69, 0x70,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x77, 0x0a, 0x0a, 0x53, 0x43, 0x56,
	0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0a, 0x43, 0x53, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x69, 0x70,
	0x22, 0x2d, 0x0a, 0x15, 0x53, 0x43, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x70, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x4f, 0x0a, 0x18, 0x53, 0x43, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x70, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2a, 0x2f, 0x0a, 0x0c, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x53, 0x75, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x01, 0x2a, 0xf4, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x56, 0x69,
	0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xa8, 0x14, 0x12, 0x1c,
	0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x56, 0x69, 0x70, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xa9, 0x14, 0x12, 0x1b, 0x0a, 0x16,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x10, 0xaa, 0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x56, 0x69, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x10, 0xab, 0x14, 0x12, 0x27, 0x0a, 0x22, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x41, 0x63, 0x74, 0x56, 0x69,
	0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xac, 0x14, 0x12,
	0x27, 0x0a, 0x22, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xad, 0x14, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actbonus_proto_rawDescOnce sync.Once
	file_actbonus_proto_rawDescData = file_actbonus_proto_rawDesc
)

func file_actbonus_proto_rawDescGZIP() []byte {
	file_actbonus_proto_rawDescOnce.Do(func() {
		file_actbonus_proto_rawDescData = protoimpl.X.CompressGZIP(file_actbonus_proto_rawDescData)
	})
	return file_actbonus_proto_rawDescData
}

var file_actbonus_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_actbonus_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_actbonus_proto_goTypes = []interface{}{
	(OpResultCode)(0),                // 0: activity.OpResultCode
	(VipBonusPacketID)(0),            // 1: activity.VipBonusPacketID
	(*VipBonusInfo)(nil),             // 2: activity.VipBonusInfo
	(*VipBonusGetInfo)(nil),          // 3: activity.VipBonusGetInfo
	(*SCVipBonusInfo)(nil),           // 4: activity.SCVipBonusInfo
	(*CSVipBonusInfo)(nil),           // 5: activity.CSVipBonusInfo
	(*SCVipBonus)(nil),               // 6: activity.SCVipBonus
	(*CSVipBonus)(nil),               // 7: activity.CSVipBonus
	(*SCNotifyVipBonusState)(nil),    // 8: activity.SCNotifyVipBonusState
	(*SCNotifyVipGetBonusState)(nil), // 9: activity.SCNotifyVipGetBonusState
}
var file_actbonus_proto_depIdxs = []int32{
	2, // 0: activity.SCVipBonusInfo.Infos:type_name -> activity.VipBonusInfo
	3, // 1: activity.SCVipBonusInfo.GetInfo:type_name -> activity.VipBonusGetInfo
	0, // 2: activity.SCVipBonus.OpRetCode:type_name -> activity.OpResultCode
	3, // 3: activity.SCVipBonus.GetInfo:type_name -> activity.VipBonusGetInfo
	3, // 4: activity.SCNotifyVipGetBonusState.GetInfo:type_name -> activity.VipBonusGetInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_actbonus_proto_init() }
func file_actbonus_proto_init() {
	if File_actbonus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_actbonus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipBonusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipBonusGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCVipBonusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSVipBonusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCVipBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSVipBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCNotifyVipBonusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actbonus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCNotifyVipGetBonusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actbonus_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actbonus_proto_goTypes,
		DependencyIndexes: file_actbonus_proto_depIdxs,
		EnumInfos:         file_actbonus_proto_enumTypes,
		MessageInfos:      file_actbonus_proto_msgTypes,
	}.Build()
	File_actbonus_proto = out.File
	file_actbonus_proto_rawDesc = nil
	file_actbonus_proto_goTypes = nil
	file_actbonus_proto_depIdxs = nil
}
