// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: actcard.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//操作结果
type OpResultCode_ActCard int32

const (
	OpResultCode_ActCard_OPRC_Sucess_ActCard                OpResultCode_ActCard = 0    //成功
	OpResultCode_ActCard_OPRC_Error_ActCard                 OpResultCode_ActCard = 1    //失败
	OpResultCode_ActCard_OPRC_CoinNotEnough                 OpResultCode_ActCard = 1056 //金币不够
	OpResultCode_ActCard_OPRC_Card_Receive_MustBuyCardFirst OpResultCode_ActCard = 10024
	OpResultCode_ActCard_OPRC_Card_Receive_HasReceived      OpResultCode_ActCard = 10025
)

// Enum value maps for OpResultCode_ActCard.
var (
	OpResultCode_ActCard_name = map[int32]string{
		0:     "OPRC_Sucess_ActCard",
		1:     "OPRC_Error_ActCard",
		1056:  "OPRC_CoinNotEnough",
		10024: "OPRC_Card_Receive_MustBuyCardFirst",
		10025: "OPRC_Card_Receive_HasReceived",
	}
	OpResultCode_ActCard_value = map[string]int32{
		"OPRC_Sucess_ActCard":                0,
		"OPRC_Error_ActCard":                 1,
		"OPRC_CoinNotEnough":                 1056,
		"OPRC_Card_Receive_MustBuyCardFirst": 10024,
		"OPRC_Card_Receive_HasReceived":      10025,
	}
)

func (x OpResultCode_ActCard) Enum() *OpResultCode_ActCard {
	p := new(OpResultCode_ActCard)
	*p = x
	return p
}

func (x OpResultCode_ActCard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpResultCode_ActCard) Descriptor() protoreflect.EnumDescriptor {
	return file_actcard_proto_enumTypes[0].Descriptor()
}

func (OpResultCode_ActCard) Type() protoreflect.EnumType {
	return &file_actcard_proto_enumTypes[0]
}

func (x OpResultCode_ActCard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpResultCode_ActCard.Descriptor instead.
func (OpResultCode_ActCard) EnumDescriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{0}
}

// 周卡月卡
type CardPacketID int32

const (
	CardPacketID_PACKET_Card_ZERO            CardPacketID = 0    // 弃用消息号
	CardPacketID_PACKET_CS_CARD_INFO         CardPacketID = 2610 // 卡信息
	CardPacketID_PACKET_SC_CARD_INFO         CardPacketID = 2611 // 卡信息
	CardPacketID_PACKET_SC_CARD_BUYOK        CardPacketID = 2612 // 购买成功
	CardPacketID_PACKET_CS_CARD_RECEIVE      CardPacketID = 2613 // 领取
	CardPacketID_PACKET_SC_CARD_RECEIVE      CardPacketID = 2614 // 领取
	CardPacketID_PACKET_SC_CARD_MODIFYCONFIG CardPacketID = 2615 // 修改配置
	CardPacketID_PACKET_CS_CARD_BUY_ONLINE   CardPacketID = 2616 // 购买卡片
	CardPacketID_PACKET_SC_CARD_BUY_ONLINE   CardPacketID = 2617 // 购买卡片
)

// Enum value maps for CardPacketID.
var (
	CardPacketID_name = map[int32]string{
		0:    "PACKET_Card_ZERO",
		2610: "PACKET_CS_CARD_INFO",
		2611: "PACKET_SC_CARD_INFO",
		2612: "PACKET_SC_CARD_BUYOK",
		2613: "PACKET_CS_CARD_RECEIVE",
		2614: "PACKET_SC_CARD_RECEIVE",
		2615: "PACKET_SC_CARD_MODIFYCONFIG",
		2616: "PACKET_CS_CARD_BUY_ONLINE",
		2617: "PACKET_SC_CARD_BUY_ONLINE",
	}
	CardPacketID_value = map[string]int32{
		"PACKET_Card_ZERO":            0,
		"PACKET_CS_CARD_INFO":         2610,
		"PACKET_SC_CARD_INFO":         2611,
		"PACKET_SC_CARD_BUYOK":        2612,
		"PACKET_CS_CARD_RECEIVE":      2613,
		"PACKET_SC_CARD_RECEIVE":      2614,
		"PACKET_SC_CARD_MODIFYCONFIG": 2615,
		"PACKET_CS_CARD_BUY_ONLINE":   2616,
		"PACKET_SC_CARD_BUY_ONLINE":   2617,
	}
)

func (x CardPacketID) Enum() *CardPacketID {
	p := new(CardPacketID)
	*p = x
	return p
}

func (x CardPacketID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardPacketID) Descriptor() protoreflect.EnumDescriptor {
	return file_actcard_proto_enumTypes[1].Descriptor()
}

func (CardPacketID) Type() protoreflect.EnumType {
	return &file_actcard_proto_enumTypes[1]
}

func (x CardPacketID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardPacketID.Descriptor instead.
func (CardPacketID) EnumDescriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{1}
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`                       // 类型: 1 周卡、2 月卡
	Prize           int64 `protobuf:"varint,2,opt,name=Prize,proto3" json:"Prize,omitempty"`                     // 价格
	ReceiveFirst    int64 `protobuf:"varint,3,opt,name=ReceiveFirst,proto3" json:"ReceiveFirst,omitempty"`       // 首次领取(购买既得)
	ReceiveEveryday int64 `protobuf:"varint,4,opt,name=ReceiveEveryday,proto3" json:"ReceiveEveryday,omitempty"` // 每日可领取
	ValidTime       int32 `protobuf:"varint,5,opt,name=ValidTime,proto3" json:"ValidTime,omitempty"`             // 有效时间(单位：天)
	BuyTs           int64 `protobuf:"varint,6,opt,name=BuyTs,proto3" json:"BuyTs,omitempty"`                     // 购买时间
	ReceiveTs       int64 `protobuf:"varint,7,opt,name=ReceiveTs,proto3" json:"ReceiveTs,omitempty"`             // 领取时间
	SystemTs        int64 `protobuf:"varint,8,opt,name=SystemTs,proto3" json:"SystemTs,omitempty"`               // 系统时间
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Card) GetPrize() int64 {
	if x != nil {
		return x.Prize
	}
	return 0
}

func (x *Card) GetReceiveFirst() int64 {
	if x != nil {
		return x.ReceiveFirst
	}
	return 0
}

func (x *Card) GetReceiveEveryday() int64 {
	if x != nil {
		return x.ReceiveEveryday
	}
	return 0
}

func (x *Card) GetValidTime() int32 {
	if x != nil {
		return x.ValidTime
	}
	return 0
}

func (x *Card) GetBuyTs() int64 {
	if x != nil {
		return x.BuyTs
	}
	return 0
}

func (x *Card) GetReceiveTs() int64 {
	if x != nil {
		return x.ReceiveTs
	}
	return 0
}

func (x *Card) GetSystemTs() int64 {
	if x != nil {
		return x.SystemTs
	}
	return 0
}

type ModifyCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`                       // 类型: 1 周卡、2 月卡
	Prize           int64 `protobuf:"varint,2,opt,name=Prize,proto3" json:"Prize,omitempty"`                     // 价格
	ReceiveFirst    int64 `protobuf:"varint,3,opt,name=ReceiveFirst,proto3" json:"ReceiveFirst,omitempty"`       // 首次领取(购买既得)
	ReceiveEveryday int64 `protobuf:"varint,4,opt,name=ReceiveEveryday,proto3" json:"ReceiveEveryday,omitempty"` // 每日可领取
	ValidTime       int32 `protobuf:"varint,5,opt,name=ValidTime,proto3" json:"ValidTime,omitempty"`             // 有效时间(单位：天)
}

func (x *ModifyCard) Reset() {
	*x = ModifyCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCard) ProtoMessage() {}

func (x *ModifyCard) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCard.ProtoReflect.Descriptor instead.
func (*ModifyCard) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{1}
}

func (x *ModifyCard) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModifyCard) GetPrize() int64 {
	if x != nil {
		return x.Prize
	}
	return 0
}

func (x *ModifyCard) GetReceiveFirst() int64 {
	if x != nil {
		return x.ReceiveFirst
	}
	return 0
}

func (x *ModifyCard) GetReceiveEveryday() int64 {
	if x != nil {
		return x.ReceiveEveryday
	}
	return 0
}

func (x *ModifyCard) GetValidTime() int32 {
	if x != nil {
		return x.ValidTime
	}
	return 0
}

// PACKET_CS_CARD_INFO
type CSCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSCardInfo) Reset() {
	*x = CSCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCardInfo) ProtoMessage() {}

func (x *CSCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCardInfo.ProtoReflect.Descriptor instead.
func (*CSCardInfo) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{2}
}

// PACKET_SC_CARD_INFO
type SCCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAct     int32                `protobuf:"varint,1,opt,name=StartAct,proto3" json:"StartAct,omitempty"`                                      // 活动是否开启 0:未开启,1:已经开启
	StartTickets int64                `protobuf:"varint,2,opt,name=StartTickets,proto3" json:"StartTickets,omitempty"`                              // 活动开启时间 时间戳
	Version      int32                `protobuf:"varint,3,opt,name=Version,proto3" json:"Version,omitempty"`                                        // 活动版本
	Cards        []*Card              `protobuf:"bytes,4,rep,name=Cards,proto3" json:"Cards,omitempty"`                                             // 卡
	OpRetCode    OpResultCode_ActCard `protobuf:"varint,5,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActCard" json:"OpRetCode,omitempty"` // 返回错误码
}

func (x *SCCardInfo) Reset() {
	*x = SCCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCardInfo) ProtoMessage() {}

func (x *SCCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCardInfo.ProtoReflect.Descriptor instead.
func (*SCCardInfo) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{3}
}

func (x *SCCardInfo) GetStartAct() int32 {
	if x != nil {
		return x.StartAct
	}
	return 0
}

func (x *SCCardInfo) GetStartTickets() int64 {
	if x != nil {
		return x.StartTickets
	}
	return 0
}

func (x *SCCardInfo) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SCCardInfo) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SCCardInfo) GetOpRetCode() OpResultCode_ActCard {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActCard_OPRC_Sucess_ActCard
}

// PACKET_SC_CARD_MODIFYCONFIG
type SCCardModifyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAct     int32         `protobuf:"varint,1,opt,name=StartAct,proto3" json:"StartAct,omitempty"`         // 活动是否开启 0:未开启,1:已经开启
	StartTickets int64         `protobuf:"varint,2,opt,name=StartTickets,proto3" json:"StartTickets,omitempty"` // 活动开启时间 时间戳
	Version      int32         `protobuf:"varint,3,opt,name=Version,proto3" json:"Version,omitempty"`           // 活动版本
	Cards        []*ModifyCard `protobuf:"bytes,4,rep,name=Cards,proto3" json:"Cards,omitempty"`                // 卡
}

func (x *SCCardModifyConfig) Reset() {
	*x = SCCardModifyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCardModifyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCardModifyConfig) ProtoMessage() {}

func (x *SCCardModifyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCardModifyConfig.ProtoReflect.Descriptor instead.
func (*SCCardModifyConfig) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{4}
}

func (x *SCCardModifyConfig) GetStartAct() int32 {
	if x != nil {
		return x.StartAct
	}
	return 0
}

func (x *SCCardModifyConfig) GetStartTickets() int64 {
	if x != nil {
		return x.StartTickets
	}
	return 0
}

func (x *SCCardModifyConfig) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SCCardModifyConfig) GetCards() []*ModifyCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

// PACKET_SC_CARD_BUYOK
type SCCardBuyOK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"` // 类型: 1 周卡、2 月卡
}

func (x *SCCardBuyOK) Reset() {
	*x = SCCardBuyOK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCardBuyOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCardBuyOK) ProtoMessage() {}

func (x *SCCardBuyOK) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCardBuyOK.ProtoReflect.Descriptor instead.
func (*SCCardBuyOK) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{5}
}

func (x *SCCardBuyOK) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// PACKET_CS_CARD_RECEIVE
type CSCardReceive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"` // 类型: 1 周卡、2 月卡
}

func (x *CSCardReceive) Reset() {
	*x = CSCardReceive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSCardReceive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCardReceive) ProtoMessage() {}

func (x *CSCardReceive) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCardReceive.ProtoReflect.Descriptor instead.
func (*CSCardReceive) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{6}
}

func (x *CSCardReceive) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// PACKET_SC_CARD_RECEIVE
type SCCardReceive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         int32                `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`                                              // 类型: 1 周卡、2 月卡
	IncludeFirst int32                `protobuf:"varint,2,opt,name=IncludeFirst,proto3" json:"IncludeFirst,omitempty"`                              // 包含购买即得(1 包含，0 不包含)
	OpRetCode    OpResultCode_ActCard `protobuf:"varint,3,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActCard" json:"OpRetCode,omitempty"` // 返回错误码
}

func (x *SCCardReceive) Reset() {
	*x = SCCardReceive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCardReceive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCardReceive) ProtoMessage() {}

func (x *SCCardReceive) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCardReceive.ProtoReflect.Descriptor instead.
func (*SCCardReceive) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{7}
}

func (x *SCCardReceive) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SCCardReceive) GetIncludeFirst() int32 {
	if x != nil {
		return x.IncludeFirst
	}
	return 0
}

func (x *SCCardReceive) GetOpRetCode() OpResultCode_ActCard {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActCard_OPRC_Sucess_ActCard
}

// PACKET_CS_CARD_BUY_ONLINE
type CSCardBuyOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"` // 类型: 1 周卡、2 月卡
}

func (x *CSCardBuyOnline) Reset() {
	*x = CSCardBuyOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSCardBuyOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCardBuyOnline) ProtoMessage() {}

func (x *CSCardBuyOnline) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCardBuyOnline.ProtoReflect.Descriptor instead.
func (*CSCardBuyOnline) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{8}
}

func (x *CSCardBuyOnline) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// PACKET_SC_CARD_BUY_ONLINE
type SCCardBuyOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      int32                `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`                                              // 类型: 1 周卡、2 月卡
	OpRetCode OpResultCode_ActCard `protobuf:"varint,2,opt,name=OpRetCode,proto3,enum=activity.OpResultCode_ActCard" json:"OpRetCode,omitempty"` // 返回错误码
}

func (x *SCCardBuyOnline) Reset() {
	*x = SCCardBuyOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actcard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCCardBuyOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCardBuyOnline) ProtoMessage() {}

func (x *SCCardBuyOnline) ProtoReflect() protoreflect.Message {
	mi := &file_actcard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCardBuyOnline.ProtoReflect.Descriptor instead.
func (*SCCardBuyOnline) Descriptor() ([]byte, []int) {
	return file_actcard_proto_rawDescGZIP(), []int{9}
}

func (x *SCCardBuyOnline) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SCCardBuyOnline) GetOpRetCode() OpResultCode_ActCard {
	if x != nil {
		return x.OpRetCode
	}
	return OpResultCode_ActCard_OPRC_Sucess_ActCard
}

var File_actcard_proto protoreflect.FileDescriptor

var file_actcard_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xec, 0x01, 0x0a, 0x04, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79,
	0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x75, 0x79, 0x54,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x75, 0x79, 0x54, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0c, 0x0a,
	0x0a, 0x43, 0x53, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0a,
	0x53, 0x43, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70,
	0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x4f,
	0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x53, 0x43, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x43, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x79, 0x4f, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x43, 0x53, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x0d, 0x53, 0x43, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x53, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x0f,
	0x53, 0x43, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x4f, 0x70, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x2a, 0xad, 0x01, 0x0a, 0x14, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x50,
	0x52, 0x43, 0x5f, 0x53, 0x75, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x4f,
	0x50, 0x52, 0x43, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67,
	0x68, 0x10, 0xa0, 0x08, 0x12, 0x27, 0x0a, 0x22, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x43, 0x61, 0x72,
	0x64, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x4d, 0x75, 0x73, 0x74, 0x42, 0x75,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x10, 0xa8, 0x4e, 0x12, 0x22, 0x0a,
	0x1d, 0x4f, 0x50, 0x52, 0x43, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x48, 0x61, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10, 0xa9,
	0x4e, 0x2a, 0x8f, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x61, 0x72,
	0x64, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x43, 0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0xb2, 0x14, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0xb3, 0x14, 0x12, 0x19, 0x0a, 0x14,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x42,
	0x55, 0x59, 0x4f, 0x4b, 0x10, 0xb4, 0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x43, 0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56,
	0x45, 0x10, 0xb5, 0x14, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53,
	0x43, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x10, 0xb6,
	0x14, 0x12, 0x20, 0x0a, 0x1b, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0xb7, 0x14, 0x12, 0x1e, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x53,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0xb8, 0x14, 0x12, 0x1e, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0xb9, 0x14, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actcard_proto_rawDescOnce sync.Once
	file_actcard_proto_rawDescData = file_actcard_proto_rawDesc
)

func file_actcard_proto_rawDescGZIP() []byte {
	file_actcard_proto_rawDescOnce.Do(func() {
		file_actcard_proto_rawDescData = protoimpl.X.CompressGZIP(file_actcard_proto_rawDescData)
	})
	return file_actcard_proto_rawDescData
}

var file_actcard_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_actcard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_actcard_proto_goTypes = []interface{}{
	(OpResultCode_ActCard)(0),  // 0: activity.OpResultCode_ActCard
	(CardPacketID)(0),          // 1: activity.CardPacketID
	(*Card)(nil),               // 2: activity.Card
	(*ModifyCard)(nil),         // 3: activity.ModifyCard
	(*CSCardInfo)(nil),         // 4: activity.CSCardInfo
	(*SCCardInfo)(nil),         // 5: activity.SCCardInfo
	(*SCCardModifyConfig)(nil), // 6: activity.SCCardModifyConfig
	(*SCCardBuyOK)(nil),        // 7: activity.SCCardBuyOK
	(*CSCardReceive)(nil),      // 8: activity.CSCardReceive
	(*SCCardReceive)(nil),      // 9: activity.SCCardReceive
	(*CSCardBuyOnline)(nil),    // 10: activity.CSCardBuyOnline
	(*SCCardBuyOnline)(nil),    // 11: activity.SCCardBuyOnline
}
var file_actcard_proto_depIdxs = []int32{
	2, // 0: activity.SCCardInfo.Cards:type_name -> activity.Card
	0, // 1: activity.SCCardInfo.OpRetCode:type_name -> activity.OpResultCode_ActCard
	3, // 2: activity.SCCardModifyConfig.Cards:type_name -> activity.ModifyCard
	0, // 3: activity.SCCardReceive.OpRetCode:type_name -> activity.OpResultCode_ActCard
	0, // 4: activity.SCCardBuyOnline.OpRetCode:type_name -> activity.OpResultCode_ActCard
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_actcard_proto_init() }
func file_actcard_proto_init() {
	if File_actcard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_actcard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCardModifyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCardBuyOK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSCardReceive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCardReceive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSCardBuyOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actcard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCCardBuyOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actcard_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actcard_proto_goTypes,
		DependencyIndexes: file_actcard_proto_depIdxs,
		EnumInfos:         file_actcard_proto_enumTypes,
		MessageInfos:      file_actcard_proto_msgTypes,
	}.Build()
	File_actcard_proto = out.File
	file_actcard_proto_rawDesc = nil
	file_actcard_proto_goTypes = nil
	file_actcard_proto_depIdxs = nil
}
